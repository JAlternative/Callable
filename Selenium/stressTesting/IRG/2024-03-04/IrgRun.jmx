<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL</stringProp>
            <stringProp name="Argument.value">irg-qa.goodt.me</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Ссылка для перехода в приложение</stringProp>
          </elementProp>
          <elementProp name="PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">PROTOCOL</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.desc">протокол https/http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influx_url" elementType="Argument">
            <stringProp name="Argument.name">influx_url</stringProp>
            <stringProp name="Argument.value">${__P(influx_db_url,http://localhost:8086/write?db=goodt)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influx_application" elementType="Argument">
            <stringProp name="Argument.name">influx_application</stringProp>
            <stringProp name="Argument.value">${__P(influx_db_application,apple)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influx_measurement" elementType="Argument">
            <stringProp name="Argument.name">influx_measurement</stringProp>
            <stringProp name="Argument.value">${__P(influx_db_measurement,belialfff)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="countShiftsOnOm" elementType="Argument">
            <stringProp name="Argument.name">countShiftsOnOm</stringProp>
            <stringProp name="Argument.value">4</stringProp>
            <stringProp name="Argument.desc">Сколько нужно создать свободных смен</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="countOrgUnits" elementType="Argument">
            <stringProp name="Argument.name">countOrgUnits</stringProp>
            <stringProp name="Argument.value">33</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC zozo" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource">db_zozo</stringProp>
        <stringProp name="dbUrl">jdbc:postgresql://37.139.42.171:5432/hrportal</stringProp>
        <stringProp name="driver">org.postgresql.Driver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">GNhChd748589bHSHD</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">postgres</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url"></stringProp>
            <stringProp name="Authorization.username">superuser</stringProp>
            <stringProp name="Authorization.password">qazxsw2!</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
        </collectionProp>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
        <stringProp name="TestPlan.comments">qazxsw2!</stringProp>
      </AuthManager>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">${influx_url}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">${influx_application}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">${influx_measurement}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">[US|TC|&lt;|&gt;].*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">99;95;90</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">Test name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex2" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex2</stringProp>
              <stringProp name="Argument.value">[TC|&lt;|&gt;].*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="________________________________________________________________________________________" enabled="false"/>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Собрать CSV файл с orgUnitId и employeeId and rosterId" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Выключить настройку публикации графиков с конфликтами" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_api/v1/system-properties/124" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;enabled&quot;: true,&#xd;
  &quot;key&quot;: &quot;roster.publish.without_conflicts&quot;,&#xd;
  &quot;title&quot;: &quot;Публикация без конфликтов&quot;,&#xd;
  &quot;description&quot;: &quot;Публикация расписания только без конфликтов&quot;,&#xd;
  &quot;value&quot;: false,&#xd;
  &quot;type&quot;: &quot;BACK&quot;,&#xd;
  &quot;dataType&quot;: &quot;BOOL&quot;,&#xd;
  &quot;tags&quot;: [&#xd;
    &quot;Публикация расписания&quot;&#xd;
  ],&#xd;
  &quot;created&quot;: &quot;2021-03-17T15:39:21.3073&quot;,&#xd;
  &quot;updated&quot;: &quot;2023-11-08T08:10:29.636474&quot;,&#xd;
  &quot;_links&quot;: {&#xd;
    &quot;self&quot;: {&#xd;
      &quot;href&quot;: &quot;https://magnit-master.goodt.me/api/v1/system-properties/124&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;id&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/system-properties/124</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/hal+json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Получить даты" enabled="true">
          <stringProp name="BeanShellSampler.query"> import java.time.LocalDate;
        
        LocalDate date = LocalDate.now();
        String dateToday = String.valueOf(date);
        String dateStart = String.valueOf(date);
        String dateEnd = String.valueOf(date.withDayOfMonth(date.lengthOfMonth()));
        String dateMonthAgo = String.valueOf(date.minusMonths(1));
        String dateYesterday = &quot;&quot;;
        if (date.equals(date.withDayOfMonth(1))) {
            dateYesterday = dateToday;
        } else {
            dateYesterday = String.valueOf(date.minusDays(1));
        }

        vars.put(&quot;DATE_NOW&quot;, dateToday);
        vars.put(&quot;DATE_START_MONTH&quot;, dateStart);
        vars.put(&quot;DATE_END_MONTH&quot;, dateEnd);
        vars.put(&quot;DATE_MONTH_AGO&quot;, dateMonthAgo);
        vars.put(&quot;DATE_YESTERDAY&quot;, dateYesterday);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Очистить csv файл" enabled="true">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

String filePath = &quot;zozo.csv&quot;;

    try {
	
	FileWriter fw = new FileWriter(filePath, false); 
	fw.close();
    } 
    catch (IOException e) {
        e.printStackTrace().toString();
        vars.put(&quot;ErrorFileWriter&quot;, e.printStackTrace().toString());
    }
</stringProp>
          <stringProp name="scriptLanguage">java</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Получить все оргюниты с zozo" enabled="true">
          <stringProp name="dataSource">db_zozo</stringProp>
          <stringProp name="query">SELECT DISTINCT o.id
FROM organizationunit o
JOIN roster r ON o.id = r.org_unit_id
JOIN entity_property_org_unit epou ON o.id = epou.org_unit_id
JOIN entity_property_value epv ON epou.value_id = epv.id
WHERE availableforcalculation = true and o.id != 189 and o.id != 196 and o.id != 412 and o.id != 331
LIMIT ${countOrgUnits}</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames">orgUnitsId</stringProp>
        </JDBCSampler>
        <hashTree/>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
          <stringProp name="TestPlan.comments">Добавить в каждый оргюнит свободные смены</stringProp>
          <stringProp name="ForeachController.inputVal">orgUnitsId</stringProp>
          <stringProp name="ForeachController.returnVal">orgUnitId</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
          <stringProp name="ForeachController.startIndex">0</stringProp>
          <stringProp name="ForeachController.endIndex">${orgUnitsId_#}</stringProp>
        </ForeachController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Получить_активные_назначения_в_подразделении" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
              <stringProp name="-1811038277">TC_1.1_Получить_активные_назначения_в_подразделении</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_1_Поиск_активного_ростера" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
              <stringProp name="-754887297">TC_1.3_Поиск_активного_ростера</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_3_US_1_Получить_PositionCategoryRosterId" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
              <stringProp name="-1390533166">TC_1.4_Получить_PositionCategoryRosterId</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Записать пользователя в csv файл" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

String filePath = &quot;zozo.csv&quot;;
Integer value = Integer.parseInt(vars.get(&quot;employeePosId_matchNr&quot;));

FileWriter fw = null;
try {
    fw = new FileWriter(filePath, true);
    File file = new File(filePath);
    if (file.length() == 0) {
        fw.write(&quot;omId,employeePosId,rosterId,postCatRosterId\n&quot;);
    }

    //for (int a = 1; a &lt;= value; a++) {
    	   String variable = &quot;employeePosId_&quot; + 1;
        fw.write(vars.get(&quot;orgUnitId&quot;) + &quot;,&quot; + vars.get(variable) + &quot;,&quot; + vars.get(&quot;active_roster_id&quot;) + &quot;,&quot; + vars.get(&quot;positionCategoryRosterId&quot;) + &quot;\n&quot;);
    //}
    fw.close();
} catch (IOException e) {
    e.printStackTrace();
}

</stringProp>
            <stringProp name="scriptLanguage">java</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Zozo удалить все смены из csv" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${countOrgUnits}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
            <intProp name="calcMode">0</intProp>
            <doubleProp>
              <name>throughput</name>
              <value>1.0</value>
              <savedValue>0.0</savedValue>
            </doubleProp>
          </ConstantThroughputTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="US_1_Zozo_отправка_запросов" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Получить даты" enabled="true">
              <stringProp name="BeanShellSampler.query"> import java.time.LocalDate;
        
        LocalDate date = LocalDate.now().plusMonths(1);
        String dateToday = String.valueOf(date);
        String dateStart = String.valueOf(date.withDayOfMonth(1));
        String dateEnd = String.valueOf(date.withDayOfMonth(date.lengthOfMonth()));
        String dateMonthAgo = String.valueOf(date.minusMonths(1));
        String dateYesterday = &quot;&quot;;
        if (date.equals(date.withDayOfMonth(1))) {
            dateYesterday = dateToday;
        } else {
            dateYesterday = String.valueOf(date.minusDays(1));
        }

        vars.put(&quot;DATE_NOW&quot;, dateToday);
        vars.put(&quot;DATE_START_MONTH&quot;, dateStart);
        vars.put(&quot;DATE_END_MONTH&quot;, dateEnd);
        vars.put(&quot;DATE_MONTH_AGO&quot;, dateMonthAgo);
        vars.put(&quot;DATE_YESTERDAY&quot;, dateYesterday);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">zozo.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">true</boolProp>
              <stringProp name="variableNames">omId,employeePosId,rosterId,postCatRosterId</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Dates" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.time.LocalDate;

LocalDate startDayOfMonth = LocalDate.now();
LocalDate endDayOfMonth = LocalDate.now().withDayOfMonth(30);
vars.put(&quot;startDayOfMonth&quot;, String.valueOf(startDayOfMonth));
vars.put(&quot;endDayOfMonth&quot;, String.valueOf(endDayOfMonth));</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Получить_смены_по_ростеру" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
              <stringProp name="939099735">TC_1.6_Получить_смены_по_ростеру</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="TestPlan.comments">Добавить в каждый оргюнит свободные смены</stringProp>
            <stringProp name="ForeachController.inputVal">shiftsId</stringProp>
            <stringProp name="ForeachController.returnVal">shiftId</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">${shiftsId_matchNr}</stringProp>
          </ForeachController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_1_Удалить_смены" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
                <stringProp name="-925609382">TC_1.7_Удалить_смены</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Zozo удалить все смены по оргюнитам" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
            <intProp name="calcMode">0</intProp>
            <doubleProp>
              <name>throughput</name>
              <value>1.0</value>
              <savedValue>0.0</savedValue>
            </doubleProp>
          </ConstantThroughputTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="US_1_Zozo_отправка_запросов" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Получить даты" enabled="true">
              <stringProp name="BeanShellSampler.query"> import java.time.LocalDate;
        
        LocalDate date = LocalDate.now().plusMonths(1);
        String dateToday = String.valueOf(date);
        String dateStart = String.valueOf(date.withDayOfMonth(1));
        String dateEnd = String.valueOf(date.withDayOfMonth(date.lengthOfMonth()));
        String dateMonthAgo = String.valueOf(date.minusMonths(1));
        String dateYesterday = &quot;&quot;;
        if (date.equals(date.withDayOfMonth(1))) {
            dateYesterday = dateToday;
        } else {
            dateYesterday = String.valueOf(date.minusDays(1));
        }

        vars.put(&quot;DATE_NOW&quot;, dateToday);
        vars.put(&quot;DATE_START_MONTH&quot;, dateStart);
        vars.put(&quot;DATE_END_MONTH&quot;, dateEnd);
        vars.put(&quot;DATE_MONTH_AGO&quot;, dateMonthAgo);
        vars.put(&quot;DATE_YESTERDAY&quot;, dateYesterday);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">zozo.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">true</boolProp>
              <stringProp name="variableNames">omId,employeePosId,rosterId,postCatRosterId</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Dates" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.time.LocalDate;

LocalDate startDayOfMonth = LocalDate.now();
LocalDate endDayOfMonth = LocalDate.now().withDayOfMonth(30);
vars.put(&quot;startDayOfMonth&quot;, String.valueOf(startDayOfMonth));
vars.put(&quot;endDayOfMonth&quot;, String.valueOf(endDayOfMonth));</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Получить_смены_по_ростеру" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
              <stringProp name="939099735">TC_1.6_Получить_смены_по_ростеру</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="TestPlan.comments">Добавить в каждый оргюнит свободные смены</stringProp>
            <stringProp name="ForeachController.inputVal">shiftsId</stringProp>
            <stringProp name="ForeachController.returnVal">shiftId</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">${shiftsId_matchNr}</stringProp>
          </ForeachController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_1_Удалить_смены" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
                <stringProp name="-925609382">TC_1.7_Удалить_смены</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Zozo отправление запросов весь csv" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${countOrgUnits}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
            <intProp name="calcMode">0</intProp>
            <doubleProp>
              <name>throughput</name>
              <value>1.0</value>
              <savedValue>0.0</savedValue>
            </doubleProp>
          </ConstantThroughputTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="US_1_Zozo_отправка_запросов" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Получить даты" enabled="true">
              <stringProp name="BeanShellSampler.query"> import java.time.LocalDate;
        
        LocalDate date = LocalDate.now();
        String dateToday = String.valueOf(date);
        String dateStart = String.valueOf(date);
        String dateEnd = String.valueOf(date.withDayOfMonth(date.lengthOfMonth()));
        String dateMonthAgo = String.valueOf(date.minusMonths(1));
        String dateYesterday = &quot;&quot;;
        if (date.equals(date.withDayOfMonth(1))) {
            dateYesterday = dateToday;
        } else {
            dateYesterday = String.valueOf(date.minusDays(1));
        }

        vars.put(&quot;DATE_NOW&quot;, dateToday);
        vars.put(&quot;DATE_START_MONTH&quot;, dateStart);
        vars.put(&quot;DATE_END_MONTH&quot;, dateEnd);
        vars.put(&quot;DATE_MONTH_AGO&quot;, dateMonthAgo);
        vars.put(&quot;DATE_YESTERDAY&quot;, dateYesterday);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">zozo.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">true</boolProp>
              <stringProp name="variableNames">omId,employeePosId,rosterId,postCatRosterId</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler countDays" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">vars.put(&quot;countDays&quot;,&quot;1&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Dates" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

Integer plusDay = Integer.valueOf(vars.get(&quot;countDays&quot;));
LocalDate date = LocalDate.now().plusDays(plusDay);
String dateNow = String.valueOf(date);
String tStart = dateNow + &quot;T09:00:00&quot;;
String tEnd = dateNow + &quot;T18:00:00&quot;;
Integer countDay = plusDay + 1;
vars.put(&quot;countDays&quot;, String.valueOf(countDay));
vars.put(&quot;tStart&quot;, tStart);
vars.put(&quot;tEnd&quot;, tEnd);

LocalDate startDayOfMonth = LocalDate.now();
LocalDate endDayOfMonth = LocalDate.now().withDayOfMonth(30);
vars.put(&quot;startDayOfMonth&quot;, String.valueOf(startDayOfMonth));
vars.put(&quot;endDayOfMonth&quot;, String.valueOf(endDayOfMonth));</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="TestPlan.comments">Сколько смен создать, каждый loop +1 день от сегодняшего</stringProp>
            <stringProp name="LoopController.loops">${countShiftsOnOm}</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Dates" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

Integer plusDay = Integer.valueOf(vars.get(&quot;countDays&quot;));
LocalDate date = LocalDate.now().plusDays(plusDay);
String dateNow = String.valueOf(date);
String tStart = dateNow + &quot;T09:00:00&quot;;
String tEnd = dateNow + &quot;T18:00:00&quot;;
Integer countDay = plusDay + 1;
vars.put(&quot;countDays&quot;, String.valueOf(countDay));
vars.put(&quot;tStart&quot;, tStart);
vars.put(&quot;tEnd&quot;, tEnd);

LocalDate startDayOfMonth = LocalDate.now();
LocalDate endDayOfMonth = LocalDate.now().withDayOfMonth(30);
vars.put(&quot;startDayOfMonth&quot;, String.valueOf(startDayOfMonth));
vars.put(&quot;endDayOfMonth&quot;, String.valueOf(endDayOfMonth));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Создать_смену_у_сотрудника" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
                <stringProp name="-690831762">TC_1.5_Создать_смену_у_сотрудника</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_5s" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(10000,10000,)}</stringProp>
          </TestAction>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Получить_смены_по_ростеру" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
              <stringProp name="939099735">TC_1.6_Получить_смены_по_ростеру</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="TestPlan.comments">Добавить в каждый оргюнит свободные смены</stringProp>
            <stringProp name="ForeachController.inputVal">shiftsId</stringProp>
            <stringProp name="ForeachController.returnVal">shiftId</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">${shiftsId_matchNr}</stringProp>
          </ForeachController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_1_Удалить_смены" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
                <stringProp name="-925609382">TC_1.7_Удалить_смены</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Zozo отправление запросов 1 поток" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
            <intProp name="calcMode">0</intProp>
            <doubleProp>
              <name>throughput</name>
              <value>1.0</value>
              <savedValue>0.0</savedValue>
            </doubleProp>
          </ConstantThroughputTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="US_1_Zozo_отправка_запросов" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Получить даты" enabled="true">
              <stringProp name="BeanShellSampler.query"> import java.time.LocalDate;
        
        LocalDate date = LocalDate.now();
        String dateToday = String.valueOf(date);
        String dateStart = String.valueOf(date);
        String dateEnd = String.valueOf(date.withDayOfMonth(date.lengthOfMonth()));
        String dateMonthAgo = String.valueOf(date.minusMonths(1));
        String dateYesterday = &quot;&quot;;
        if (date.equals(date.withDayOfMonth(1))) {
            dateYesterday = dateToday;
        } else {
            dateYesterday = String.valueOf(date.minusDays(1));
        }

        vars.put(&quot;DATE_NOW&quot;, dateToday);
        vars.put(&quot;DATE_START_MONTH&quot;, dateStart);
        vars.put(&quot;DATE_END_MONTH&quot;, dateEnd);
        vars.put(&quot;DATE_MONTH_AGO&quot;, dateMonthAgo);
        vars.put(&quot;DATE_YESTERDAY&quot;, dateYesterday);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">zozo.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">true</boolProp>
              <stringProp name="variableNames">omId,employeePosId,rosterId,postCatRosterId</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler countDays" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">vars.put(&quot;countDays&quot;,&quot;1&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Dates" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

Integer plusDay = Integer.valueOf(vars.get(&quot;countDays&quot;));
LocalDate date = LocalDate.now().plusDays(plusDay);
String dateNow = String.valueOf(date);
String tStart = dateNow + &quot;T09:00:00&quot;;
String tEnd = dateNow + &quot;T18:00:00&quot;;
Integer countDay = plusDay + 1;
vars.put(&quot;countDays&quot;, String.valueOf(countDay));
vars.put(&quot;tStart&quot;, tStart);
vars.put(&quot;tEnd&quot;, tEnd);

LocalDate startDayOfMonth = LocalDate.now();
LocalDate endDayOfMonth = LocalDate.now().withDayOfMonth(30);
vars.put(&quot;startDayOfMonth&quot;, String.valueOf(startDayOfMonth));
vars.put(&quot;endDayOfMonth&quot;, String.valueOf(endDayOfMonth));</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="TestPlan.comments">Сколько смен создать, каждый loop +1 день от сегодняшего</stringProp>
            <stringProp name="LoopController.loops">${countShiftsOnOm}</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Dates" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

Integer plusDay = Integer.valueOf(vars.get(&quot;countDays&quot;));
LocalDate date = LocalDate.now().plusDays(plusDay);
String dateNow = String.valueOf(date);
String tStart = dateNow + &quot;T09:00:00&quot;;
String tEnd = dateNow + &quot;T18:00:00&quot;;
Integer countDay = plusDay + 1;
vars.put(&quot;countDays&quot;, String.valueOf(countDay));
vars.put(&quot;tStart&quot;, tStart);
vars.put(&quot;tEnd&quot;, tEnd);

LocalDate startDayOfMonth = LocalDate.now();
LocalDate endDayOfMonth = LocalDate.now().withDayOfMonth(30);
vars.put(&quot;startDayOfMonth&quot;, String.valueOf(startDayOfMonth));
vars.put(&quot;endDayOfMonth&quot;, String.valueOf(endDayOfMonth));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Создать_смену_у_сотрудника" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
                <stringProp name="-690831762">TC_1.5_Создать_смену_у_сотрудника</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_5s" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(10000,10000,)}</stringProp>
          </TestAction>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Получить_смены_по_ростеру" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
              <stringProp name="939099735">TC_1.6_Получить_смены_по_ростеру</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="TestPlan.comments">Добавить в каждый оргюнит свободные смены</stringProp>
            <stringProp name="ForeachController.inputVal">shiftsId</stringProp>
            <stringProp name="ForeachController.returnVal">shiftId</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">${shiftsId_matchNr}</stringProp>
          </ForeachController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_1_Удалить_смены" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
                <stringProp name="-925609382">TC_1.7_Удалить_смены</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="jp@gc - Stepping Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">33</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">4</stringProp>
        <stringProp name="Start users count burst">0</stringProp>
        <stringProp name="Start users period">33</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">33</stringProp>
        <stringProp name="flighttime">1200</stringProp>
        <stringProp name="rampUp">5</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
            <intProp name="calcMode">0</intProp>
            <doubleProp>
              <name>throughput</name>
              <value>1.0</value>
              <savedValue>0.0</savedValue>
            </doubleProp>
          </ConstantThroughputTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="US_1_Zozo_отправка_запросов" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Получить даты" enabled="true">
              <stringProp name="BeanShellSampler.query"> import java.time.LocalDate;
        
        LocalDate date = LocalDate.now();
        String dateToday = String.valueOf(date);
        String dateStart = String.valueOf(date);
        String dateEnd = String.valueOf(date.withDayOfMonth(date.lengthOfMonth()));
        String dateMonthAgo = String.valueOf(date.minusMonths(1));
        String dateYesterday = &quot;&quot;;
        if (date.equals(date.withDayOfMonth(1))) {
            dateYesterday = dateToday;
        } else {
            dateYesterday = String.valueOf(date.minusDays(1));
        }

        vars.put(&quot;DATE_NOW&quot;, dateToday);
        vars.put(&quot;DATE_START_MONTH&quot;, dateStart);
        vars.put(&quot;DATE_END_MONTH&quot;, dateEnd);
        vars.put(&quot;DATE_MONTH_AGO&quot;, dateMonthAgo);
        vars.put(&quot;DATE_YESTERDAY&quot;, dateYesterday);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">zozo.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">true</boolProp>
              <stringProp name="variableNames">omId,employeePosId,rosterId,postCatRosterId</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler countDays" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">vars.put(&quot;countDays&quot;,&quot;1&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Dates" enabled="true">
            <stringProp name="BeanShellSampler.query">import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

Integer plusDay = Integer.valueOf(vars.get(&quot;countDays&quot;));
LocalDate date = LocalDate.now().plusDays(plusDay);
String dateNow = String.valueOf(date);
String tStart = dateNow + &quot;T09:00:00&quot;;
String tEnd = dateNow + &quot;T18:00:00&quot;;
Integer countDay = plusDay + 1;
vars.put(&quot;countDays&quot;, String.valueOf(countDay));
vars.put(&quot;tStart&quot;, tStart);
vars.put(&quot;tEnd&quot;, tEnd);

LocalDate startDayOfMonth = LocalDate.now();
LocalDate endDayOfMonth = LocalDate.now().withDayOfMonth(30);
vars.put(&quot;startDayOfMonth&quot;, String.valueOf(startDayOfMonth));
vars.put(&quot;endDayOfMonth&quot;, String.valueOf(endDayOfMonth));</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="TestPlan.comments">Сколько смен создать, каждый loop +1 день от сегодняшего</stringProp>
            <stringProp name="LoopController.loops">${countShiftsOnOm}</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Dates" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

Integer plusDay = Integer.valueOf(vars.get(&quot;countDays&quot;));
LocalDate date = LocalDate.now().plusDays(plusDay);
String dateNow = String.valueOf(date);
String tStart = dateNow + &quot;T09:00:00&quot;;
String tEnd = dateNow + &quot;T18:00:00&quot;;
Integer countDay = plusDay + 1;
vars.put(&quot;countDays&quot;, String.valueOf(countDay));
vars.put(&quot;tStart&quot;, tStart);
vars.put(&quot;tEnd&quot;, tEnd);

LocalDate startDayOfMonth = LocalDate.now();
LocalDate endDayOfMonth = LocalDate.now().withDayOfMonth(30);
vars.put(&quot;startDayOfMonth&quot;, String.valueOf(startDayOfMonth));
vars.put(&quot;endDayOfMonth&quot;, String.valueOf(endDayOfMonth));</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Создать_смену_у_сотрудника" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
                <stringProp name="-690831762">TC_1.5_Создать_смену_у_сотрудника</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_10s" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(10000,10000,)}</stringProp>
          </TestAction>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Получить_смены_по_ростеру" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
              <stringProp name="939099735">TC_1.6_Получить_смены_по_ростеру</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
            <stringProp name="TestPlan.comments">Добавить в каждый оргюнит свободные смены</stringProp>
            <stringProp name="ForeachController.inputVal">shiftsId</stringProp>
            <stringProp name="ForeachController.returnVal">shiftId</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">${shiftsId_matchNr}</stringProp>
          </ForeachController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_1_Удалить_смены" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="764597751">Test Plan</stringProp>
                <stringProp name="838226337">US_1_Отправка_запроса_на_контрагентов</stringProp>
                <stringProp name="-925609382">TC_1.7_Удалить_смены</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="________________________________________________________________________________________" enabled="false"/>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="____СЦЕНАРИИ___" enabled="false"/>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="US_1_Отправка_запроса_на_контрагентов" enabled="false"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_1.1_Получить_активные_назначения_в_подразделении" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/v1/org-units/${orgUnitId}/employee-positions" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="from" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${DATE_START_MONTH}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">from</stringProp>
                </elementProp>
                <elementProp name="include-chief" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">include-chief</stringProp>
                </elementProp>
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">100000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${DATE_END_MONTH}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/org-units/${orgUnitId}/employee-positions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">employeePosId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$._embedded.employeePositions[*].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_1.2_Создать_смены_через_мастер_планирования" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_api/v1/shifts/shift-wizard" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;organizationUnitId&quot;:${omId},&quot;employeePositionIds&quot;:[${employeeId}],&quot;date&quot;:&quot;${DATE_START_MONTH}&quot;,&quot;cyclical&quot;:true,&quot;days&quot;:&quot;2&quot;,&quot;freeDays&quot;:&quot;5&quot;,&quot;endDate&quot;:&quot;${DATE_END_MONTH}&quot;,&quot;timeInterval&quot;:{&quot;startTime&quot;:&quot;04:00&quot;,&quot;endTime&quot;:&quot;12:00&quot;},&quot;breaks&quot;:[],&quot;addWorkList&quot;:[],&quot;extraShifts&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/shifts/shift-wizard</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
              <collectionProp name="AuthManager.auth_list">
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url"></stringProp>
                  <stringProp name="Authorization.username">${USERNAME}</stringProp>
                  <stringProp name="Authorization.password">qwe</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                </elementProp>
              </collectionProp>
              <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
            </AuthManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/hal+json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_1.3_Поиск_активного_ростера" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_api/v1/org-units/${orgUnitId}/rosters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="from" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${DATE_START_MONTH}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">from</stringProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${DATE_END_MONTH}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/org-units/${orgUnitId}/rosters</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Active Roster Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">active_roster_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$._embedded.rosters[?(@.active== true)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_1.4_Получить_PositionCategoryRosterId" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_api/v1/rosters/${active_roster_id}/position-category-rosters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/rosters/${active_roster_id}/position-category-rosters</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor получить ссылку на positionCategoryRosterId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">linksPositionCategoryRosterId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$._embedded.positionCategoryRosters[0]._links.self.href </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor получить positionCategoryRosterId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
              <stringProp name="RegexExtractor.refname">positionCategoryRosterId</stringProp>
              <stringProp name="RegexExtractor.regex">/(\d+)$</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <stringProp name="Sample.scope">variable</stringProp>
              <stringProp name="Scope.variable">linksPositionCategoryRosterId</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_1.5_Создать_смену_у_сотрудника" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_api/v1/shifts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;lunch&quot;: 60,&#xd;
  &quot;commentText&quot;: &quot;Сотрудник забыл&quot;,&#xd;
  &quot;_links&quot;: {&#xd;
    &quot;self&quot;: {&#xd;
      &quot;href&quot;: &quot;https://${BASE_URL}/api/v1/shifts&quot;&#xd;
    },&#xd;
    &quot;employeePosition&quot;: {&#xd;
      &quot;href&quot;: &quot;https://${BASE_URL}/api/v1/employee-positions/${employeePosId}&quot;&#xd;
    },&#xd;
    &quot;roster&quot;: {&#xd;
      &quot;href&quot;: &quot;https://${BASE_URL}/api/v1/rosters/${rosterId}&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;scheduleItemKind&quot;: &quot;SHIFT&quot;,&#xd;
  &quot;employeePositionId&quot;: ${employeePosId},&#xd;
  &quot;rosterId&quot;: ${rosterId},&#xd;
  &quot;dateTimeInterval&quot;: {&#xd;
    &quot;startDateTime&quot;: &quot;${tStart}&quot;,&#xd;
    &quot;endDateTime&quot;: &quot;${tEnd}&quot;&#xd;
  },&#xd;
  &quot;positionCategoryRosterId&quot;: ${postCatRosterId}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/shifts</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/hal+json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor получить ссылку на positionCategoryRosterId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">linksPositionCategoryRosterId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$._embedded.positionCategoryRosters[0]._links.self.href </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor получить positionCategoryRosterId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
              <stringProp name="RegexExtractor.refname">positionCategoryRosterId</stringProp>
              <stringProp name="RegexExtractor.regex">/(\d+)$</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <stringProp name="Sample.scope">variable</stringProp>
              <stringProp name="Scope.variable">linksPositionCategoryRosterId</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_1.6_Получить_смены_по_ростеру" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_api/v1/rosters/${rosterId}/shifts-short?${startDayOfMonth}&amp;to=${endDayOfMonth}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/rosters/${rosterId}/shifts-short?from=${startDayOfMonth}&amp;to=${endDayOfMonth}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">https://zozo-wfm-qa.goodt.me/api/v1/rosters/248991/shifts-short?from=2024-03-01&amp;to=2024-03-31</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/hal+json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor получить ссылку на positionCategoryRosterId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">shiftsId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.[&apos;_embedded&apos;].shifts[*].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor получить positionCategoryRosterId" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
              <stringProp name="RegexExtractor.refname">positionCategoryRosterId</stringProp>
              <stringProp name="RegexExtractor.regex">/(\d+)$</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <stringProp name="Sample.scope">variable</stringProp>
              <stringProp name="Scope.variable">linksPositionCategoryRosterId</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_1.7_Удалить_смены" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/api/v1/shifts/delete" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/shifts/${shiftId}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">https://zozo-wfm-qa.goodt.me/api/v1/shifts/50616948
https://zozo-wfm-qa.goodt.me/api/v1/shifts/50616948
https://zozo-wfm-qa.goodt.me/api/v1/shifts/50616948
https://zozo-wfm-qa.goodt.me/api/v1/shifts/50616948</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/hal+json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/hal+json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/hal+json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor получить ссылку на positionCategoryRosterId" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">shiftsId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.[&apos;_embedded&apos;].shifts[*].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor получить positionCategoryRosterId" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
              <stringProp name="RegexExtractor.refname">positionCategoryRosterId</stringProp>
              <stringProp name="RegexExtractor.regex">/(\d+)$</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">null</stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <stringProp name="Sample.scope">variable</stringProp>
              <stringProp name="Scope.variable">linksPositionCategoryRosterId</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>false</timestamp>
            <success>false</success>
            <label>false</label>
            <code>false</code>
            <message>false</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <url>true</url>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>

<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">${SCHEME}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="HOST" elementType="Argument">
            <stringProp name="Argument.name">HOST</stringProp>
            <stringProp name="Argument.value">${__P(p_host,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCHEME" elementType="Argument">
            <stringProp name="Argument.name">SCHEME</stringProp>
            <stringProp name="Argument.value">${__P(p_scheme,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="AUTH_URL" elementType="Argument">
            <stringProp name="Argument.name">AUTH_URL</stringProp>
            <stringProp name="Argument.value">${__P(p_auth_url,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PORT_TOKEN" elementType="Argument">
            <stringProp name="Argument.name">PORT_TOKEN</stringProp>
            <stringProp name="Argument.value">${__P(p_port_token,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influx_url" elementType="Argument">
            <stringProp name="Argument.name">influx_url</stringProp>
            <stringProp name="Argument.value">${__P(influx_db_url,http://localhost:8086/write?db=test)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influx_application" elementType="Argument">
            <stringProp name="Argument.name">influx_application</stringProp>
            <stringProp name="Argument.value">${__P(influx_db_application,apple)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influx_measurement" elementType="Argument">
            <stringProp name="Argument.name">influx_measurement</stringProp>
            <stringProp name="Argument.value">${__P(influx_db_measurement,belialfff)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CSV_USERS_PATH" elementType="Argument">
            <stringProp name="Argument.name">CSV_USERS_PATH</stringProp>
            <stringProp name="Argument.value">${__P(p_csv_user_path,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">${influx_url}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">${influx_application}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">${influx_measurement}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">[TC|&lt;|&gt;].*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">99;95;90</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">Test name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV &gt;&gt;&gt; login, password " enabled="true">
        <stringProp name="filename">${CSV_USERS_PATH}</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">name,secname,LOGIN,mail,pass1,comp</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="____ТЕСТЫ____" enabled="false"/>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TG_pacing_Работа_с_редактором" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">3</stringProp>
        <stringProp name="ThreadGroup.ramp_time">240</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Авторизация" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1165856343">US_1_Регистрация и авторизация</stringProp>
            <stringProp name="1979215804">TC_1.3_Авторизация_csv</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_5s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_4_US_4_Отправка запросов в коннектор при запуске солюшенов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_30s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">30000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_15s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">15000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_3_US_3_Запрос_на_клонирование_post" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2092148195">US_3_Запрос_на_клонирование</stringProp>
            <stringProp name="744888172">TC_3_Запрос_на_клонирование</stringProp>
            <stringProp name="-722031863">TC_3.1_Запрос_на_клонирование</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_5s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_4_US_4_Отправка запросов в коннектор при запуске солюшенов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2092148195">US_3_Запрос_на_клонирование</stringProp>
            <stringProp name="744888172">TC_3_Запрос_на_клонирование</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_30s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">30000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_5s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_3_US_3_Запрос_на_клонирование_delete" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2092148195">US_3_Запрос_на_клонирование</stringProp>
            <stringProp name="744888172">TC_3_Запрос_на_клонирование</stringProp>
            <stringProp name="154983110">TC_3.2_Удаление_скопированного_проекта</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUpTG_Rump_Работа_с_редактором" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Авторизация" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1165856343">US_1_Регистрация и авторизация</stringProp>
            <stringProp name="1979215804">TC_1.3_Авторизация_csv</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_5s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_4_US_4_Отправка запросов в коннектор при запуске солюшенов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2092148195">US_3_Запрос_на_клонирование</stringProp>
            <stringProp name="744888172">TC_3_Запрос_на_клонирование</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_30s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">30000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_15s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">15000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_3_US_3_Запрос_на_клонирование_post" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2092148195">US_3_Запрос_на_клонирование</stringProp>
            <stringProp name="744888172">TC_3_Запрос_на_клонирование</stringProp>
            <stringProp name="-722031863">TC_3.1_Запрос_на_клонирование</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_5s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_4_US_4_Отправка запросов в коннектор при запуске солюшенов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="1144561330">TC_2_Загрузка всех доступных аппов (старые запросы)</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_30s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">30000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_5s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_3_US_3_Запрос_на_клонирование_delete" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2092148195">US_3_Запрос_на_клонирование</stringProp>
            <stringProp name="744888172">TC_3_Запрос_на_клонирование</stringProp>
            <stringProp name="154983110">TC_3.2_Удаление_скопированного_проекта</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TG_тест" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Авторизация" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1165856343">US_1_Регистрация и авторизация</stringProp>
            <stringProp name="1979215804">TC_1.3_Авторизация_csv</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_5s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_4_US_4_Отправка запросов в коннектор при запуске солюшенов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2092148195">US_3_Запрос_на_клонирование</stringProp>
            <stringProp name="744888172">TC_3_Запрос_на_клонирование</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_30s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">30000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_15s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">15000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_3_US_3_Запрос_на_клонирование_post" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2092148195">US_3_Запрос_на_клонирование</stringProp>
            <stringProp name="744888172">TC_3_Запрос_на_клонирование</stringProp>
            <stringProp name="-722031863">TC_3.1_Запрос_на_клонирование</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_5s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_4_US_4_Отправка запросов в коннектор при запуске солюшенов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_30s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">30000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_5s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_3_US_3_Запрос_на_клонирование_delete" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2092148195">US_3_Запрос_на_клонирование</stringProp>
            <stringProp name="744888172">TC_3_Запрос_на_клонирование</stringProp>
            <stringProp name="154983110">TC_3.2_Удаление_скопированного_проекта</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup guiclass="com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroupGui" testclass="com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup" testname="bzmFFATG_Работа_с_редактором" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <collectionProp name="Schedule">
          <collectionProp name="-158895778">
            <stringProp name="50">2</stringProp>
            <stringProp name="56313">900</stringProp>
            <stringProp name="48625">100</stringProp>
          </collectionProp>
        </collectionProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
        <stringProp name="ConcurrencyLimit">10000</stringProp>
      </com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Авторизация" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1165856343">US_1_Регистрация и авторизация</stringProp>
            <stringProp name="1979215804">TC_1.3_Авторизация_csv</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_5s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_4_US_4_Отправка запросов в коннектор при запуске солюшенов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1873869216">US_5_Отправка запросов в коннектор при запуске солюшенов</stringProp>
            <stringProp name="1274716464">TC_4_Отправка запросов в коннектор при запуске солюшенов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_30s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">30000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_15s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">15000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_3_US_3_Запрос_на_клонирование_post" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2092148195">US_3_Запрос_на_клонирование</stringProp>
            <stringProp name="744888172">TC_3_Запрос_на_клонирование</stringProp>
            <stringProp name="-722031863">TC_3.1_Запрос_на_клонирование</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_5s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_4_US_4_Отправка запросов в коннектор при запуске солюшенов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1873869216">US_5_Отправка запросов в коннектор при запуске солюшенов</stringProp>
            <stringProp name="1274716464">TC_4_Отправка запросов в коннектор при запуске солюшенов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_30s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">30000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="FCA_5s" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_3_US_3_Запрос_на_клонирование_delete" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2092148195">US_3_Запрос_на_клонирование</stringProp>
            <stringProp name="744888172">TC_3_Запрос_на_клонирование</stringProp>
            <stringProp name="154983110">TC_3.2_Удаление_скопированного_проекта</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_4_Отправка запросов в коннектор при запуске солюшенов" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="HOST_PATHER" elementType="Argument">
                <stringProp name="Argument.name">HOST_PATHER</stringProp>
                <stringProp name="Argument.value">partner.goodt.me</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SCHEME_PATHER" elementType="Argument">
                <stringProp name="Argument.name">SCHEME_PATHER</stringProp>
                <stringProp name="Argument.value">https</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="AUTH_URL_PATHER" elementType="Argument">
                <stringProp name="Argument.name">AUTH_URL_PATHER</stringProp>
                <stringProp name="Argument.value">goodt-auth.goodt.me</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PORT_TOKEN_PATHER" elementType="Argument">
                <stringProp name="Argument.name">PORT_TOKEN_PATHER</stringProp>
                <stringProp name="Argument.value">9443</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PATH_CONNECTOR" elementType="Argument">
                <stringProp name="Argument.name">PATH_CONNECTOR</stringProp>
                <stringProp name="Argument.value">connector/api/v1/data</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_Auth" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">player</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">p.kiselev</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">kiselev2023</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner-auth.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port">9443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/insight_partners/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">TOKEN_HR;REFRESH_TOKEN_HR</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.refresh_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;NO_REFRESH_TOKEN</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST_PATHER}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${SCHEME_PATHER}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${PATH_CONNECTOR}</stringProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_US_2.0_Запросы" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">50.0</stringProp>
              <stringProp name="RandomTimer.range">50.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">79</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;IT&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_2" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Нефть и газ&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_3" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Металлургия, металлообработка&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_4" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Прочее&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_5" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Финансовый сектор&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_6" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Услуги для бизнеса&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_7" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Розничная торговля&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_8" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Телекоммуникации, связь&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_9" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Финансовый сектор&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_10" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Нефть и газ&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_11" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Услуги для бизнеса&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_12" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Прочее&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_13" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Продукты питания&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_14" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Телекоммуникации, связь&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_15" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Розничная торговля&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_16" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Металлургия, металлообработка&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_17" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Продукты питания&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_18" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;IT&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_19" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;стаж&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;стаж&quot;:&quot;name_experience&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_20" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;вакансии&quot;:{&quot;$exp&quot;:&quot;count (distinct (id_vacancy))&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_21" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;дата-дата&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;created_at&quot;:&quot;created_at&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;Дата&quot;:{&quot;$exp&quot;:&quot;concat(date_part(&apos;day&apos;, CURRENT_DATE()),&apos;-&apos;,&apos;0&apos;,\ndate_part(&apos;month&apos;, CURRENT_DATE()),&apos;-&apos;,\ndate_part(&apos;year&apos;, CURRENT_DATE())\n)\n\n&quot;}},{&quot;Сорт&quot;:{&quot;$exp&quot;:&quot;max(cast(LEFT(created_at, 2) as int))&quot;}}],&quot;$dimensions&quot;:[{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_22" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;вакансия&quot;:{&quot;$max&quot;:&quot;professional_roles_name&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_23" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;},&quot;$filters&quot;:[{&quot;зп&quot;:{&quot;$lk&quot;:[&quot;&lt; 100 000 руб.&quot;]}}],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_24" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;дата-дата&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;created_at&quot;:&quot;created_at&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;Дата&quot;:{&quot;$exp&quot;:&quot;concat(date_part(&apos;day&apos;, CURRENT_DATE()),&apos;-&apos;,&apos;0&apos;,\ndate_part(&apos;month&apos;, CURRENT_DATE()),&apos;-&apos;,\ndate_part(&apos;year&apos;, CURRENT_DATE())\n)\n\n&quot;}},{&quot;Сорт&quot;:{&quot;$exp&quot;:&quot;max(cast(LEFT(created_at, 2) as int))&quot;}}],&quot;$dimensions&quot;:[{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_25" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[{&quot;зп&quot;:{&quot;$lk&quot;:[&quot;&gt; 250 000 руб.&quot;]}}],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_26" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;salary&quot;:&quot;salary&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[{&quot;salary&quot;:{&quot;$eqn&quot;:[&quot;0&quot;]}}],&quot;$metrics&quot;:[{&quot;зп&quot;:{&quot;$avg&quot;:&quot;salary&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_27" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;отечественное по&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when platform_type = &apos;Отечественное ПО&apos; then id_vacancy end) as double) / cast(count(case when platform_type in(&apos;Отечественное ПО&apos;, &apos;Иностранное ПО&apos;) then  id_vacancy end) as double) end\n&quot;}},{&quot;text&quot;:{&quot;$exp&quot;:&quot;&apos;доля рынка труда, которую занимает отечественное ПО&apos;&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_28" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[{&quot;зп&quot;:{&quot;$lk&quot;:[&quot;Зарплата не указана&quot;]}}],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_29" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[{&quot;зп&quot;:{&quot;$lk&quot;:[&quot;100 000 - 250 000 руб.&quot;]}}],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_30" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;дата-дата&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;created_at&quot;:&quot;created_at&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;Дата&quot;:{&quot;$exp&quot;:&quot;concat(date_part(&apos;day&apos;, CURRENT_DATE()),&apos;-&apos;,&apos;0&apos;,\ndate_part(&apos;month&apos;, CURRENT_DATE()),&apos;-&apos;,\ndate_part(&apos;year&apos;, CURRENT_DATE())\n)\n\n&quot;}},{&quot;Сорт&quot;:{&quot;$exp&quot;:&quot;max(cast(LEFT(created_at, 2) as int))&quot;}}],&quot;$dimensions&quot;:[{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_31" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;дата-дата&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;created_at&quot;:&quot;created_at&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;Дата&quot;:{&quot;$exp&quot;:&quot;concat(date_part(&apos;day&apos;, CURRENT_DATE()),&apos;-&apos;,&apos;0&apos;,\ndate_part(&apos;month&apos;, CURRENT_DATE()),&apos;-&apos;,\ndate_part(&apos;year&apos;, CURRENT_DATE())\n)\n\n&quot;}},{&quot;Сорт&quot;:{&quot;$exp&quot;:&quot;max(cast(LEFT(created_at, 2) as int))&quot;}}],&quot;$dimensions&quot;:[{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_32" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;иностранное по&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when platform_type = &apos;Иностранное ПО&apos; then id_vacancy end) as double) / cast(count(case when platform_type in(&apos;Отечественное ПО&apos;, &apos;Иностранное ПО&apos;) then  id_vacancy end) as double) end\n&quot;}},{&quot;text&quot;:{&quot;$exp&quot;:&quot;&apos;доля рынка труда, которую занимает иностранное ПО&apos;&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_33" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;дата-дата&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;created_at&quot;:&quot;created_at&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;Дата&quot;:{&quot;$exp&quot;:&quot;concat(date_part(&apos;day&apos;, CURRENT_DATE()),&apos;-&apos;,&apos;0&apos;,\ndate_part(&apos;month&apos;, CURRENT_DATE()),&apos;-&apos;,\ndate_part(&apos;year&apos;, CURRENT_DATE())\n)\n&quot;}},{&quot;Сорт&quot;:{&quot;$exp&quot;:&quot;max(cast(LEFT(created_at, 2) as int))&quot;}}],&quot;$dimensions&quot;:[{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_34" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;график&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;график&quot;:&quot;name_schedule&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_35" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;работодатели&quot;:{&quot;$exp&quot;:&quot;count (distinct(name_employer))&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_36" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;salary&quot;:&quot;salary&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$count&quot;:&quot;id_vacancy&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_37" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;флаг&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;flag_salary_range2&quot;:&quot;flag_salary_range2&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;флаг&quot;:&quot;flag_salary_range2&quot;},{&quot;доход&quot;:&quot;salary_range2&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_38" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;зп&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;salary&quot;:&quot;salary&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;logo_urls_240&quot;:&quot;logo_urls_240&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;лого&quot;:{&quot;$max&quot;:&quot;logo_urls_240&quot;}},{&quot;город&quot;:{&quot;$max&quot;:&quot;name_city&quot;}},{&quot;зп&quot;:{&quot;$exp&quot;:&quot;cast (max (salary) as int)&quot;}}],&quot;$dimensions&quot;:[{&quot;айди&quot;:&quot;id_vacancy&quot;},{&quot;вакансия&quot;:&quot;name_vacancy&quot;},{&quot;компания&quot;:&quot;name_employer&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_39" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;отрасль&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;отрасль&quot;:&quot;specializations_profarea_name&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_40" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;зп&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;salary&quot;:&quot;salary&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;logo_urls_240&quot;:&quot;logo_urls_240&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;лого&quot;:{&quot;$max&quot;:&quot;logo_urls_240&quot;}},{&quot;город&quot;:{&quot;$max&quot;:&quot;name_city&quot;}},{&quot;дата&quot;:{&quot;$max&quot;:&quot;created_at&quot;}},{&quot;зп&quot;:{&quot;$max&quot;:&quot;salary&quot;}},{&quot;координаты&quot;:{&quot;$exp&quot;:&quot;max(concat(&apos;[&apos;,lat_city,&apos;,&apos;,lng_city,&apos;]&apos;))&quot;}},{&quot;масштаб&quot;:{&quot;$exp&quot;:&quot;10&quot;}}],&quot;$dimensions&quot;:[{&quot;айди&quot;:&quot;id_vacancy&quot;},{&quot;вакансия&quot;:&quot;name_vacancy&quot;},{&quot;компания&quot;:&quot;name_employer&quot;},{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:11,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_41" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;специализация&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;специализация&quot;:&quot;professional_roles_name&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_42" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;},&quot;$filters&quot;:[{&quot;requirement&quot;:{&quot;$inn&quot;:[&quot;Нет данных&quot;]}}],&quot;$metrics&quot;:[{&quot;Навык&quot;:{&quot;$gcu&quot;:&quot;requirement&quot;}}],&quot;$dimensions&quot;:[{&quot;Роль&quot;:&quot;professional_roles_name&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_43" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;},&quot;$filters&quot;:[{&quot;тип по&quot;:{&quot;$in&quot;:[&quot;Отечественное ПО&quot;,&quot;Иностранное ПО&quot;]}}],&quot;$metrics&quot;:[{&quot;кол-во по&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;тип по&quot;:&quot;platform_type&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_44" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;должность&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;requirement&quot;:&quot;requirement&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;должность&quot;:&quot;requirement&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_45" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;кол-во вакансий&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;кол-во вакансий&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;регион&quot;:&quot;name_region&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_46" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_map&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;state_id&quot;:&quot;state_id&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;state_name&quot;:&quot;state_name&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;вакансии&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;ид&quot;:&quot;state_id&quot;},{&quot;регион&quot;:&quot;state_name&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_47" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;дата-дата&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;created_at&quot;:&quot;created_at&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;Дата&quot;:{&quot;$exp&quot;:&quot;concat(date_part(&apos;day&apos;, CURRENT_DATE()),&apos;-&apos;,&apos;0&apos;,\ndate_part(&apos;month&apos;, CURRENT_DATE()),&apos;-&apos;,\ndate_part(&apos;year&apos;, CURRENT_DATE())\n)\n\n&quot;}},{&quot;Сорт&quot;:{&quot;$exp&quot;:&quot;max(cast(LEFT(created_at, 2) as int))&quot;}}],&quot;$dimensions&quot;:[{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_48" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;спец&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;спец&quot;:&quot;professional_roles_name&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_49" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;кол-во вакансий&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;salary&quot;:&quot;salary&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;кол-во вакансий&quot;:{&quot;$exp&quot;:&quot;count (distinct (id_vacancy))&quot;}},{&quot;зп&quot;:{&quot;$exp&quot;:&quot;avg (case when salary !=0 then salary end)&quot;}},{&quot;вакансии по позиции&quot;:{&quot;$count&quot;:&quot;id_vacancy&quot;}}],&quot;$dimensions&quot;:[{&quot;позиция&quot;:&quot;professional_roles_name&quot;}]},&quot;limit&quot;:20,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_50" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;кл навыки&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;кл навыки&quot;:&quot;requirement&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_51" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;город&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;город&quot;:&quot;name_city&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_52" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;индустрия&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;индустрия&quot;:&quot;industry_2&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/realms/rostalent/protocol/openid-connect/token" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">player</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">test-hr-5-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Wlinekm6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">goodt-auth.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port">9443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/rostalent/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">TOKEN_HR;REFRESH_TOKEN_HR</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.refresh_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;NO_REFRESH_TOKEN</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup guiclass="com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroupGui" testclass="com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup" testname="bzmFFATG_Регистрация_Авторизация_80%" enabled="false">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <collectionProp name="Schedule">
          <collectionProp name="-259328589">
            <stringProp name="1691">50</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="53">5</stringProp>
          </collectionProp>
        </collectionProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="ConcurrencyLimit"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Регистрация" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1165856343">US_1_Регистрация и авторизация</stringProp>
            <stringProp name="-415454697">TC_1.1_Регистрация</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Const_15s" enabled="false">
          <stringProp name="ConstantTimer.delay">15000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="ThC_US_1_Авторизация" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>80.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Авторизация" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="-1973650240">TG_delete_users</stringProp>
              <stringProp name="-887436110">c1_удаление</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_3_US_3_Запрос_на_клонирование" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2092148195">US_3_Запрос_на_клонирование</stringProp>
            <stringProp name="744888172">TC_3_Запрос_на_клонирование</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_4_US_4_Отправка запросов в коннектор при запуске солюшенов" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1873869216">US_5_Отправка запросов в коннектор при запуске солюшенов</stringProp>
            <stringProp name="1274716464">TC_4_Отправка запросов в коннектор при запуске солюшенов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <PreciseThroughputTimer guiclass="TestBeanGUI" testclass="PreciseThroughputTimer" testname="Precise Throughput Timer" enabled="true">
          <doubleProp>
            <name>allowedThroughputSurplus</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </doubleProp>
          <intProp name="batchSize">1</intProp>
          <intProp name="batchThreadDelay">0</intProp>
          <longProp name="duration">3600</longProp>
          <intProp name="exactLimit">10000</intProp>
          <longProp name="randomSeed">0</longProp>
          <doubleProp>
            <name>throughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </doubleProp>
          <intProp name="throughputPeriod">3600</intProp>
        </PreciseThroughputTimer>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup guiclass="com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroupGui" testclass="com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup" testname="bzmFFATG_Авторизация_csv" enabled="false">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <collectionProp name="Schedule">
          <collectionProp name="84509266">
            <stringProp name="49">1</stringProp>
            <stringProp name="49">1</stringProp>
            <stringProp name="49">1</stringProp>
          </collectionProp>
        </collectionProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="ConcurrencyLimit"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.arrivals.FreeFormArrivalsThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Регистрация" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1165856343">US_1_Регистрация и авторизация</stringProp>
            <stringProp name="-415454697">TC_1.1_Регистрация</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Авторизация" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1165856343">US_1_Регистрация и авторизация</stringProp>
            <stringProp name="1979215804">TC_1.3_Авторизация_csv</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Загрузка всех доступных аппов" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="475639108">US_2_Загрузка_апов</stringProp>
            <stringProp name="-1406113722">TC_2_Загрузка всех доступных аппов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_3_US_3_Запрос_на_клонирование" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2092148195">US_3_Запрос_на_клонирование</stringProp>
            <stringProp name="744888172">TC_3_Запрос_на_клонирование</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_4_US_4_Отправка запросов в коннектор при запуске солюшенов" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1873869216">US_5_Отправка запросов в коннектор при запуске солюшенов</stringProp>
            <stringProp name="1274716464">TC_4_Отправка запросов в коннектор при запуске солюшенов</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TG_delete_users" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">70</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="c1_удаление" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/realms/master/protocol/openid-connect/token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">goodtadmin</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">BER2RlmxQW0L</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">admin-cli</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/master/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">TOKEN_AUTH;REFRESH_TOKEN_AUTH</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.refresh_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;NO_REFRESH_TOKEN</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_auth/admin/realms/insight_partners/users?exact=true&amp;username={LOGIN}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/admin/realms/insight_partners/users?exact=true&amp;username=${LOGIN}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN_AUTH}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">USER_ID;</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$[0].id;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">id_err</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="&gt;&gt;&gt; CSV" enabled="false">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">def users = new File(&apos;users2.csv&apos;)

vars.put(&quot;log&quot;, &quot;${LOGIN&quot;});

def usr = &quot;${LOGIN}&quot;
def us = &quot;${USER_ID}&quot;

if (us != &quot;id_err&quot;){
   users &lt;&lt; vars.get(&apos;usr&apos;)
   users &lt;&lt; &apos;,&apos;
   users &lt;&lt; vars.get(&apos;us&apos;)
   users &lt;&lt; System.getProperty(&apos;line.separator&apos;)
}
</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/realms/master/protocol/openid-connect/token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">goodtadmin</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">BER2RlmxQW0L</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">admin-cli</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/master/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">DELETE_USER_TOKEN;</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/admin/realms/insight_partners/users/{USER_ID}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/admin/realms/insight_partners/users/${USER_ID}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${DELETE_USER_TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TG_add_users" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="c1 - Регистрация и авторизация" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="c1_s1 - Регистрация" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30</stringProp>
              <stringProp name="RandomTimer.range">30.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Записать пользоватя в csv файл" enabled="false">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;


String filePath = &quot;users.csv&quot;;
DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;ddMMyyyy&quot;);
String date = LocalDate.now().format(formatter);
String name = &quot;Иван&quot;;
String surname = &quot;Иванов&quot;;
String login = RandomStringUtils.random(12, &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;);
String email = login + &quot;@goodtNTtest&quot; + date + &quot;.com&quot;;
String password = &quot;12345qwerty&quot;;
String company = &quot;Goodt&quot;;
FileWriter fw = null;
        try {
            fw = new FileWriter(filePath, true);
            File file = new File(filePath);
            if (file.length() == 0) {
                fw.write(&quot;name, surname, login, email, password, company\n&quot;);
            }
            fw.write(name + &quot;,&quot; + surname + &quot;,&quot; + login + &quot;,&quot; + email + &quot;,&quot; + password + &quot;,&quot; + company + &quot;\n&quot;);
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
vars.put(&quot;NAME&quot;, name);
vars.put(&quot;SURNAME&quot;, surname);
vars.put(&quot;LOGIN&quot;, login);
vars.put(&quot;EMAIL&quot;, email);
vars.put(&quot;PASSWORD&quot;, password);
vars.put(&quot;COMPANY&quot;, company);</stringProp>
              <stringProp name="scriptLanguage">java</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Задать переменные для пользователя" enabled="false">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;ddMMyyyy&quot;);
String date = LocalDate.now().format(formatter);
String name = &quot;Иван&quot;;
String surname = &quot;Иванов&quot;;
String login = RandomStringUtils.random(12, &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;);
String email = login + &quot;@goodtNTtest&quot; + date + &quot;.com&quot;;
String password = &quot;12345qwerty&quot;;
String company = &quot;Goodt&quot;;
vars.put(&quot;NAME&quot;, name);
vars.put(&quot;SURNAME&quot;, surname);
vars.put(&quot;LOGIN&quot;, login);
vars.put(&quot;EMAIL&quot;, email);
vars.put(&quot;PASSWORD&quot;, password);
vars.put(&quot;COMPANY&quot;, company);</stringProp>
              <stringProp name="scriptLanguage">java</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/realms/master/protocol/openid-connect/token" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">password</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                  </elementProp>
                  <elementProp name="username" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">goodtadmin</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                  </elementProp>
                  <elementProp name="password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">BER2RlmxQW0L</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">password</stringProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">admin-cli</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">auth/realms/master/protocol/openid-connect/token</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">TOKEN_AUTH;REFRESH_TOKEN_AUTH</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.refresh_token</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;NO_REFRESH_TOKEN</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/admin/realms/insight_partners/users" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&#xd;
  &quot;username&quot; : &quot;${LOGIN}&quot;,&#xd;
&#xd;
  &quot;email&quot; : &quot;${EMAIL}&quot;,&#xd;
&#xd;
  &quot;emailVerified&quot; : &quot;true&quot;,&#xd;
&#xd;
  &quot;enabled&quot; : &quot;true&quot;,&#xd;
&#xd;
  &quot;attributes&quot; : {&#xd;
&#xd;
    &quot;acceptTerms&quot; : &quot;on&quot;,&#xd;
&#xd;
    &quot;company&quot;: &quot;Goodt&quot;&#xd;
&#xd;
  },&#xd;
&#xd;
  &quot;credentials&quot; : [ {&#xd;
&#xd;
    &quot;temporary&quot; : &quot;false&quot;,&#xd;
&#xd;
    &quot;type&quot; : &quot;password&quot;,&#xd;
&#xd;
    &quot;value&quot; : &quot;${PASSWORD}&quot;&#xd;
&#xd;
  } ]&#xd;
&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner-auth.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">auth/admin/realms/insight_partners/users</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_AUTH}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_auth/admin/realms/insight_partners/users?exact=true&amp;username={LOGIN}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">auth/admin/realms/insight_partners/users?exact=true&amp;username=${LOGIN}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_AUTH}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">USER_ID;</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$[0].id;</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Записать пользователя в csv файл" enabled="false">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

String filePath = &quot;users5.csv&quot;;
FileWriter fw = null;
        try {
            fw = new FileWriter(filePath, true);
            File file = new File(filePath);
            if (file.length() == 0) {
                fw.write(&quot;name, surname, login, email, password, company, id\n&quot;);
            }
            fw.write(&quot;${NAME}&quot; + &quot;,&quot; + &quot;${SURNAME}&quot; + &quot;,&quot; + &quot;${LOGIN}&quot; + &quot;,&quot; + &quot;${EMAIL}&quot; + &quot;,&quot; + &quot;${PASSWORD}&quot; + &quot;,&quot; + &quot;${COMPANY}&quot; + &quot;,&quot; + &quot;${USER_ID}&quot; + &quot;\n&quot;);
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
</stringProp>
              <stringProp name="scriptLanguage">java</stringProp>
            </JSR223Sampler>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="c1_s2 - Авторизация" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">30</stringProp>
              <stringProp name="RandomTimer.range">30.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/realms/insight_partners/protocol/openid-connect/token" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">password</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">player</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                  </elementProp>
                  <elementProp name="username" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${LOGIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                  </elementProp>
                  <elementProp name="password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${PASSWORD}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">password</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">auth/realms/insight_partners/protocol/openid-connect/token</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">https://partner-auth.goodt.me:9443/auth/realms/insight_partners/protocol/openid-connect/token</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">TOKEN;REFRESH_TOKEN</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.refresh_token</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;NO_REFRESH_TOKEN</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/folder" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">app</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/folder</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">ID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NOT_ID</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/project" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">app</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/project</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="____СЦЕНАРИИ___" enabled="false"/>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="US_1_Регистрация и авторизация" enabled="false"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_1.1_Регистрация" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">30</stringProp>
            <stringProp name="RandomTimer.range">30.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Записать пользоватя в csv файл" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;


String filePath = &quot;users.csv&quot;;
DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;ddMMyyyy&quot;);
String date = LocalDate.now().format(formatter);
String name = &quot;Иван&quot;;
String surname = &quot;Иванов&quot;;
String login = RandomStringUtils.random(12, &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;);
String email = login + &quot;@goodtNTtest&quot; + date + &quot;.com&quot;;
String password = &quot;12345qwerty&quot;;
String company = &quot;Goodt&quot;;
FileWriter fw = null;
        try {
            fw = new FileWriter(filePath, true);
            File file = new File(filePath);
            if (file.length() == 0) {
                fw.write(&quot;name, surname, login, email, password, company\n&quot;);
            }
            fw.write(name + &quot;,&quot; + surname + &quot;,&quot; + login + &quot;,&quot; + email + &quot;,&quot; + password + &quot;,&quot; + company + &quot;\n&quot;);
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
vars.put(&quot;NAME&quot;, name);
vars.put(&quot;SURNAME&quot;, surname);
vars.put(&quot;LOGIN&quot;, login);
vars.put(&quot;EMAIL&quot;, email);
vars.put(&quot;PASSWORD&quot;, password);
vars.put(&quot;COMPANY&quot;, company);</stringProp>
            <stringProp name="scriptLanguage">java</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Задать переменные для пользователя" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;ddMMyyyy&quot;);
String date = LocalDate.now().format(formatter);
String name = &quot;Иван&quot;;
String surname = &quot;Иванов&quot;;
String login = RandomStringUtils.random(12, &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;);
String email = login + &quot;@goodtNTtest&quot; + date + &quot;.com&quot;;
String password = &quot;12345qwerty&quot;;
String company = &quot;Goodt&quot;;
vars.put(&quot;NAME&quot;, name);
vars.put(&quot;SURNAME&quot;, surname);
vars.put(&quot;LOGIN&quot;, login);
vars.put(&quot;EMAIL&quot;, email);
vars.put(&quot;PASSWORD&quot;, password);
vars.put(&quot;COMPANY&quot;, company);</stringProp>
            <stringProp name="scriptLanguage">java</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/realms/master/protocol/openid-connect/token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">goodtadmin</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">BER2RlmxQW0L</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">admin-cli</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
            <stringProp name="HTTPSampler.port">9443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/master/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JsonEx&lt;&lt;&lt;TOKEN_AUTH;REFRESH_TOKEN_AUTH" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">TOKEN_AUTH;REFRESH_TOKEN_AUTH</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.refresh_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;NO_REFRESH_TOKEN</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="jsr &lt;&lt;&lt; csv_users" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;ddMMyyyy&quot;);
String date = LocalDate.now().format(formatter);
String name = &quot;Иван&quot;;
String surname = &quot;Иванов&quot;;
String login = RandomStringUtils.random(12, &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;);
String email = login + &quot;@goodtNTtest&quot; + date + &quot;.com&quot;;
String password = &quot;12345qwerty&quot;;
String company = &quot;Goodt&quot;;
vars.put(&quot;NAME&quot;, name);
vars.put(&quot;SURNAME&quot;, surname);
vars.put(&quot;LOGIN&quot;, login);
vars.put(&quot;EMAIL&quot;, email);
vars.put(&quot;PASSWORD&quot;, password);
vars.put(&quot;COMPANY&quot;, company);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/admin/realms/insight_partners/users" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
  &quot;username&quot; : &quot;${LOGIN}&quot;,&#xd;
&#xd;
  &quot;email&quot; : &quot;${EMAIL}&quot;,&#xd;
&#xd;
  &quot;emailVerified&quot; : &quot;true&quot;,&#xd;
&#xd;
  &quot;enabled&quot; : &quot;true&quot;,&#xd;
&#xd;
  &quot;attributes&quot; : {&#xd;
&#xd;
    &quot;acceptTerms&quot; : &quot;on&quot;,&#xd;
&#xd;
    &quot;company&quot;: &quot;Goodt&quot;&#xd;
&#xd;
  },&#xd;
&#xd;
  &quot;credentials&quot; : [ {&#xd;
&#xd;
    &quot;temporary&quot; : &quot;false&quot;,&#xd;
&#xd;
    &quot;type&quot; : &quot;password&quot;,&#xd;
&#xd;
    &quot;value&quot; : &quot;${PASSWORD}&quot;&#xd;
&#xd;
  } ]&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner-auth.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/admin/realms/insight_partners/users</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN_AUTH}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_auth/admin/realms/insight_partners/users?exact=true&amp;username={LOGIN}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/admin/realms/insight_partners/users?exact=true&amp;username=${LOGIN}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN_AUTH}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="jsonEx&lt;&lt;&lt;USER_ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">USER_ID;</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$[0].id;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="jsr &gt;&gt;&gt; user_csv" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

String filePath = &quot;users5.csv&quot;;
FileWriter fw = null;
        try {
            fw = new FileWriter(filePath, true);
            File file = new File(filePath);
            if (file.length() == 0) {
                fw.write(&quot;name, surname, login, email, password, company, id\n&quot;);
            }
            fw.write(&quot;${NAME}&quot; + &quot;,&quot; + &quot;${SURNAME}&quot; + &quot;,&quot; + &quot;${LOGIN}&quot; + &quot;,&quot; + &quot;${EMAIL}&quot; + &quot;,&quot; + &quot;${PASSWORD}&quot; + &quot;,&quot; + &quot;${COMPANY}&quot; + &quot;,&quot; + &quot;${USER_ID}&quot; + &quot;\n&quot;);
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Записать пользователя в csv файл" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

String filePath = &quot;users5.csv&quot;;
FileWriter fw = null;
        try {
            fw = new FileWriter(filePath, true);
            File file = new File(filePath);
            if (file.length() == 0) {
                fw.write(&quot;name, surname, login, email, password, company, id\n&quot;);
            }
            fw.write(&quot;${NAME}&quot; + &quot;,&quot; + &quot;${SURNAME}&quot; + &quot;,&quot; + &quot;${LOGIN}&quot; + &quot;,&quot; + &quot;${EMAIL}&quot; + &quot;,&quot; + &quot;${PASSWORD}&quot; + &quot;,&quot; + &quot;${COMPANY}&quot; + &quot;,&quot; + &quot;${USER_ID}&quot; + &quot;\n&quot;);
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
</stringProp>
            <stringProp name="scriptLanguage">java</stringProp>
          </JSR223Sampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_1.2_Авторизация_jsr" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">30</stringProp>
            <stringProp name="RandomTimer.range">30.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/realms/insight_partners/protocol/openid-connect/token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">player</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${LOGIN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${PASSWORD}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/insight_partners/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">https://partner-auth.goodt.me:9443/auth/realms/insight_partners/protocol/openid-connect/token</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="jsonEx&lt;&lt;&lt;TOKEN;REFRESH_TOKEN" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">TOKEN;REFRESH_TOKEN</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.refresh_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;NO_REFRESH_TOKEN</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">79</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/folder" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/folder</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="jsonEx&lt;&lt;&lt;ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_ID</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/project" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/project</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_1.3_Авторизация_csv" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">30</stringProp>
            <stringProp name="RandomTimer.range">30.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/realms/insight_partners/protocol/openid-connect/token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">player</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${LOGIN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${pass1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/insight_partners/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">https://partner-auth.goodt.me:9443/auth/realms/insight_partners/protocol/openid-connect/token</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="jsonEx&lt;&lt;&lt;TOKEN;REFRESH_TOKEN" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">TOKEN;REFRESH_TOKEN</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.refresh_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;NO_REFRESH_TOKEN</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">79</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/folder" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/folder</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="jsonEx&lt;&lt;&lt;ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_ID</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/project" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/project</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="US_2_Загрузка_апов" enabled="false"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_2_Загрузка всех доступных аппов (старые запросы)" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">30</stringProp>
            <stringProp name="RandomTimer.range">30.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/folder" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="parent_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">parent_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/folder</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/project" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="folder_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">folder_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/project</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="jsonEx&lt;&lt;&lt;PROJECT_ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PROJECT_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$[*].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_PROJECT_ID</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/folder" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/folder</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/folder" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="parent_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">parent_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/folder</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/project" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="folder_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">folder_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/project</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="jsonEx&lt;&lt;&lt;PROJECT_ID;PROJECT_TITLE" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PROJECT_ID;PROJECT_TITLE</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..id;$[?(@.id == ${PROJECT_ID})].title</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_PROJECT_ID;NOT_PROJECT_TITLE</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_2_Загрузка всех доступных аппов" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">30</stringProp>
            <stringProp name="RandomTimer.range">30.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/folder?type=app&amp;id=${ID}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/folder</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/folder?type=app&amp;parent_id=${ID}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="parent_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">parent_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/folder</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/project?type=app&amp;folder_id=${ID}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="folder_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">folder_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/project</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="jsonEx&lt;&lt;&lt;PROJECT_ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PROJECT_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$[*].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_PROJECT_ID</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="US_3_Запрос_на_клонирование" enabled="false"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_3_Запрос_на_клонирование" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value"> gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; ; charset=UTF-16</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">30</stringProp>
            <stringProp name="RandomTimer.range">30.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_3.1_Запрос_на_клонирование" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_api/project/{PROJECT_ID}/clone" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&#xd;
  &quot;id&quot;: ${PROJECT_ID},&#xd;
&#xd;
  &quot;title&quot;: &quot;${PROJECT_TITLE}&quot;,&#xd;
&#xd;
  &quot;slug&quot;: &quot;${__RandomString(12,abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,)}&quot;,&#xd;
&#xd;
  &quot;description&quot;: &quot;${__RandomString(12,abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,)}&quot;,&#xd;
&#xd;
  &quot;type&quot;: &quot;app&quot;,&#xd;
&#xd;
  &quot;tags&quot;: [],&#xd;
&#xd;
  &quot;folder_id&quot;: ${ID},&#xd;
&#xd;
  &quot;is_owner&quot;: false,&#xd;
&#xd;
  &quot;is_shared_group&quot;: true,&#xd;
&#xd;
  &quot;can_shared_group_edit&quot;: false&#xd;
&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/project/${PROJECT_ID}/clone</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="jsr&lt;&lt;&lt;PROJECT_TITLE" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.nio.charset.Charset;

String myField = vars.get(&quot;PROJECT_TITLE&quot;);
byte[] encodedBytes = myField.getBytes(Charset.forName(&quot;ISO-8859-1&quot;)); // получение байтовой последовательности в кодировке ISO-8859-1
String decodedString = new String(encodedBytes, Charset.forName(&quot;UTF-8&quot;)); // преобразование байтов в строку в кодировке UTF-8
vars.put(&quot;PROJECT_TITLE&quot;, decodedString);</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-16</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="regEx&lt;&lt;&lt;PROJECT_ID_CLONE" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PROJECT_ID_CLONE</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:(\d+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">ERROR_PROJECT_ID_CLONE</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_3.2_Удаление_скопированного_проекта" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_api/project/{PROJECT_ID_CLONE}" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">${SCHEME}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/project/${PROJECT_ID_CLONE}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-16</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="c3 - Авторизованный запрос на клонирование-0" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.nio.charset.Charset;

String myField = vars.get(&quot;PROJECT_TITLE&quot;);
byte[] encodedBytes = myField.getBytes(Charset.forName(&quot;ISO-8859-1&quot;)); // получение байтовой последовательности в кодировке ISO-8859-1
String decodedString = new String(encodedBytes, Charset.forName(&quot;UTF-8&quot;)); // преобразование байтов в строку в кодировке UTF-8
vars.put(&quot;PROJECT_TITLE&quot;, decodedString);</stringProp>
            <stringProp name="scriptLanguage">java</stringProp>
          </JSR223Sampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="US_5_Отправка запросов в коннектор при запуске солюшенов" enabled="false"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_4_Отправка запросов в коннектор при запуске солюшенов" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="HOST_PATHER" elementType="Argument">
                <stringProp name="Argument.name">HOST_PATHER</stringProp>
                <stringProp name="Argument.value">partner.goodt.me</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SCHEME_PATHER" elementType="Argument">
                <stringProp name="Argument.name">SCHEME_PATHER</stringProp>
                <stringProp name="Argument.value">https</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="AUTH_URL_PATHER" elementType="Argument">
                <stringProp name="Argument.name">AUTH_URL_PATHER</stringProp>
                <stringProp name="Argument.value">goodt-auth.goodt.me</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PORT_TOKEN_PATHER" elementType="Argument">
                <stringProp name="Argument.name">PORT_TOKEN_PATHER</stringProp>
                <stringProp name="Argument.value">9443</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PATH_CONNECTOR" elementType="Argument">
                <stringProp name="Argument.name">PATH_CONNECTOR</stringProp>
                <stringProp name="Argument.value">connector/api/v1/data</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_Auth" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">player</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">p.kiselev</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">kiselev2023</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner-auth.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port">9443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/insight_partners/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">TOKEN_HR;REFRESH_TOKEN_HR</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.refresh_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;NO_REFRESH_TOKEN</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST_PATHER}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${SCHEME_PATHER}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${PATH_CONNECTOR}</stringProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_US_2.0_Запросы" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">50.0</stringProp>
              <stringProp name="RandomTimer.range">50.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">79</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;IT&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_2" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Нефть и газ&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_3" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Металлургия, металлообработка&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_4" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Прочее&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_5" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Финансовый сектор&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_6" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Услуги для бизнеса&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_7" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Розничная торговля&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_8" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Телекоммуникации, связь&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_9" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Финансовый сектор&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_10" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Нефть и газ&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_11" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Услуги для бизнеса&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_12" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Прочее&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_13" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Продукты питания&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_14" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Телекоммуникации, связь&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_15" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Розничная торговля&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_16" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Металлургия, металлообработка&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_17" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;Продукты питания&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_18" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;процент вакансий&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when industry3 = &apos;IT&apos; then industry3 end) as double) / cast(count(id_vacancy) as double) end&quot;}},{&quot;доля в общем&quot;:{&quot;$exp&quot;:&quot;max(&apos;доля в общем&apos;)&quot;}},{&quot;кол-ве вакансий&quot;:{&quot;$exp&quot;:&quot;max(&apos;кол-ве вакансий&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_19" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;стаж&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;стаж&quot;:&quot;name_experience&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_20" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;вакансии&quot;:{&quot;$exp&quot;:&quot;count (distinct (id_vacancy))&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_21" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;дата-дата&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;created_at&quot;:&quot;created_at&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;Дата&quot;:{&quot;$exp&quot;:&quot;concat(date_part(&apos;day&apos;, CURRENT_DATE()),&apos;-&apos;,&apos;0&apos;,\ndate_part(&apos;month&apos;, CURRENT_DATE()),&apos;-&apos;,\ndate_part(&apos;year&apos;, CURRENT_DATE())\n)\n\n&quot;}},{&quot;Сорт&quot;:{&quot;$exp&quot;:&quot;max(cast(LEFT(created_at, 2) as int))&quot;}}],&quot;$dimensions&quot;:[{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_22" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;вакансия&quot;:{&quot;$max&quot;:&quot;professional_roles_name&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_23" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;},&quot;$filters&quot;:[{&quot;зп&quot;:{&quot;$lk&quot;:[&quot;&lt; 100 000 руб.&quot;]}}],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_24" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;дата-дата&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;created_at&quot;:&quot;created_at&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;Дата&quot;:{&quot;$exp&quot;:&quot;concat(date_part(&apos;day&apos;, CURRENT_DATE()),&apos;-&apos;,&apos;0&apos;,\ndate_part(&apos;month&apos;, CURRENT_DATE()),&apos;-&apos;,\ndate_part(&apos;year&apos;, CURRENT_DATE())\n)\n\n&quot;}},{&quot;Сорт&quot;:{&quot;$exp&quot;:&quot;max(cast(LEFT(created_at, 2) as int))&quot;}}],&quot;$dimensions&quot;:[{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_25" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[{&quot;зп&quot;:{&quot;$lk&quot;:[&quot;&gt; 250 000 руб.&quot;]}}],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_26" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;salary&quot;:&quot;salary&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[{&quot;salary&quot;:{&quot;$eqn&quot;:[&quot;0&quot;]}}],&quot;$metrics&quot;:[{&quot;зп&quot;:{&quot;$avg&quot;:&quot;salary&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_27" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;отечественное по&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when platform_type = &apos;Отечественное ПО&apos; then id_vacancy end) as double) / cast(count(case when platform_type in(&apos;Отечественное ПО&apos;, &apos;Иностранное ПО&apos;) then  id_vacancy end) as double) end\n&quot;}},{&quot;text&quot;:{&quot;$exp&quot;:&quot;&apos;доля рынка труда, которую занимает отечественное ПО&apos;&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_28" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[{&quot;зп&quot;:{&quot;$lk&quot;:[&quot;Зарплата не указана&quot;]}}],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_29" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[{&quot;зп&quot;:{&quot;$lk&quot;:[&quot;100 000 - 250 000 руб.&quot;]}}],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_30" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;дата-дата&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;created_at&quot;:&quot;created_at&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;Дата&quot;:{&quot;$exp&quot;:&quot;concat(date_part(&apos;day&apos;, CURRENT_DATE()),&apos;-&apos;,&apos;0&apos;,\ndate_part(&apos;month&apos;, CURRENT_DATE()),&apos;-&apos;,\ndate_part(&apos;year&apos;, CURRENT_DATE())\n)\n\n&quot;}},{&quot;Сорт&quot;:{&quot;$exp&quot;:&quot;max(cast(LEFT(created_at, 2) as int))&quot;}}],&quot;$dimensions&quot;:[{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_31" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;дата-дата&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;created_at&quot;:&quot;created_at&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;Дата&quot;:{&quot;$exp&quot;:&quot;concat(date_part(&apos;day&apos;, CURRENT_DATE()),&apos;-&apos;,&apos;0&apos;,\ndate_part(&apos;month&apos;, CURRENT_DATE()),&apos;-&apos;,\ndate_part(&apos;year&apos;, CURRENT_DATE())\n)\n\n&quot;}},{&quot;Сорт&quot;:{&quot;$exp&quot;:&quot;max(cast(LEFT(created_at, 2) as int))&quot;}}],&quot;$dimensions&quot;:[{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_32" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;иностранное по&quot;:{&quot;$exp&quot;:&quot;case when cast(count(id_vacancy) as double) = 0 then 0 else cast(count(case when platform_type = &apos;Иностранное ПО&apos; then id_vacancy end) as double) / cast(count(case when platform_type in(&apos;Отечественное ПО&apos;, &apos;Иностранное ПО&apos;) then  id_vacancy end) as double) end\n&quot;}},{&quot;text&quot;:{&quot;$exp&quot;:&quot;&apos;доля рынка труда, которую занимает иностранное ПО&apos;&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_33" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;дата-дата&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;created_at&quot;:&quot;created_at&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;Дата&quot;:{&quot;$exp&quot;:&quot;concat(date_part(&apos;day&apos;, CURRENT_DATE()),&apos;-&apos;,&apos;0&apos;,\ndate_part(&apos;month&apos;, CURRENT_DATE()),&apos;-&apos;,\ndate_part(&apos;year&apos;, CURRENT_DATE())\n)\n&quot;}},{&quot;Сорт&quot;:{&quot;$exp&quot;:&quot;max(cast(LEFT(created_at, 2) as int))&quot;}}],&quot;$dimensions&quot;:[{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_34" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;график&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;график&quot;:&quot;name_schedule&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_35" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;работодатели&quot;:{&quot;$exp&quot;:&quot;count (distinct(name_employer))&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_36" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;salary&quot;:&quot;salary&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$count&quot;:&quot;id_vacancy&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_37" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;флаг&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;flag_salary_range2&quot;:&quot;flag_salary_range2&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;флаг&quot;:&quot;flag_salary_range2&quot;},{&quot;доход&quot;:&quot;salary_range2&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_38" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;зп&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;salary&quot;:&quot;salary&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;logo_urls_240&quot;:&quot;logo_urls_240&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;лого&quot;:{&quot;$max&quot;:&quot;logo_urls_240&quot;}},{&quot;город&quot;:{&quot;$max&quot;:&quot;name_city&quot;}},{&quot;зп&quot;:{&quot;$exp&quot;:&quot;cast (max (salary) as int)&quot;}}],&quot;$dimensions&quot;:[{&quot;айди&quot;:&quot;id_vacancy&quot;},{&quot;вакансия&quot;:&quot;name_vacancy&quot;},{&quot;компания&quot;:&quot;name_employer&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_39" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;отрасль&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;отрасль&quot;:&quot;specializations_profarea_name&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_40" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;зп&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;salary&quot;:&quot;salary&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;logo_urls_240&quot;:&quot;logo_urls_240&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;лого&quot;:{&quot;$max&quot;:&quot;logo_urls_240&quot;}},{&quot;город&quot;:{&quot;$max&quot;:&quot;name_city&quot;}},{&quot;дата&quot;:{&quot;$max&quot;:&quot;created_at&quot;}},{&quot;зп&quot;:{&quot;$max&quot;:&quot;salary&quot;}},{&quot;координаты&quot;:{&quot;$exp&quot;:&quot;max(concat(&apos;[&apos;,lat_city,&apos;,&apos;,lng_city,&apos;]&apos;))&quot;}},{&quot;масштаб&quot;:{&quot;$exp&quot;:&quot;10&quot;}}],&quot;$dimensions&quot;:[{&quot;айди&quot;:&quot;id_vacancy&quot;},{&quot;вакансия&quot;:&quot;name_vacancy&quot;},{&quot;компания&quot;:&quot;name_employer&quot;},{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:11,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_41" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;специализация&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;специализация&quot;:&quot;professional_roles_name&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_42" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;},&quot;$filters&quot;:[{&quot;requirement&quot;:{&quot;$inn&quot;:[&quot;Нет данных&quot;]}}],&quot;$metrics&quot;:[{&quot;Навык&quot;:{&quot;$gcu&quot;:&quot;requirement&quot;}}],&quot;$dimensions&quot;:[{&quot;Роль&quot;:&quot;professional_roles_name&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_43" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;},&quot;$filters&quot;:[{&quot;тип по&quot;:{&quot;$in&quot;:[&quot;Отечественное ПО&quot;,&quot;Иностранное ПО&quot;]}}],&quot;$metrics&quot;:[{&quot;кол-во по&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;тип по&quot;:&quot;platform_type&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_44" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;должность&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;requirement&quot;:&quot;requirement&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;должность&quot;:&quot;requirement&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_45" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;кол-во вакансий&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;кол-во вакансий&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;регион&quot;:&quot;name_region&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_46" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_map&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;state_id&quot;:&quot;state_id&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;state_name&quot;:&quot;state_name&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;вакансии&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;ид&quot;:&quot;state_id&quot;},{&quot;регион&quot;:&quot;state_name&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_47" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;дата-дата&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;created_at&quot;:&quot;created_at&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;Дата&quot;:{&quot;$exp&quot;:&quot;concat(date_part(&apos;day&apos;, CURRENT_DATE()),&apos;-&apos;,&apos;0&apos;,\ndate_part(&apos;month&apos;, CURRENT_DATE()),&apos;-&apos;,\ndate_part(&apos;year&apos;, CURRENT_DATE())\n)\n\n&quot;}},{&quot;Сорт&quot;:{&quot;$exp&quot;:&quot;max(cast(LEFT(created_at, 2) as int))&quot;}}],&quot;$dimensions&quot;:[{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_48" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;спец&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;спец&quot;:&quot;professional_roles_name&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_49" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;кол-во вакансий&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;salary&quot;:&quot;salary&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;кол-во вакансий&quot;:{&quot;$exp&quot;:&quot;count (distinct (id_vacancy))&quot;}},{&quot;зп&quot;:{&quot;$exp&quot;:&quot;avg (case when salary !=0 then salary end)&quot;}},{&quot;вакансии по позиции&quot;:{&quot;$count&quot;:&quot;id_vacancy&quot;}}],&quot;$dimensions&quot;:[{&quot;позиция&quot;:&quot;professional_roles_name&quot;}]},&quot;limit&quot;:20,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_50" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;кл навыки&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;кл навыки&quot;:&quot;requirement&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_51" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;город&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;город&quot;:&quot;name_city&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_/dremio-connector/api/v1/data_52" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;solutions&quot;,&quot;5_job_fair&quot;,&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;индустрия&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;индустрия&quot;:&quot;industry_2&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/realms/rostalent/protocol/openid-connect/token" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">player</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">test-hr-5-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">Wlinekm6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">goodt-auth.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port">9443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/rostalent/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">TOKEN_HR;REFRESH_TOKEN_HR</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.refresh_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;NO_REFRESH_TOKEN</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_4_ нагрузочное тестирование коннектора Pather" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_Auth" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">player</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">p.kiselev</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">kiselev2023</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner-auth.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port">9443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/insight_partners/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">TOKEN_HR;REFRESH_TOKEN_HR</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.refresh_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;NO_REFRESH_TOKEN</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="HOST_PATHER" elementType="Argument">
                <stringProp name="Argument.name">HOST_PATHER</stringProp>
                <stringProp name="Argument.value">partner.goodt.me</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SCHEME_PATHER" elementType="Argument">
                <stringProp name="Argument.name">SCHEME_PATHER</stringProp>
                <stringProp name="Argument.value">https</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="AUTH_URL_PATHER" elementType="Argument">
                <stringProp name="Argument.name">AUTH_URL_PATHER</stringProp>
                <stringProp name="Argument.value">goodt-auth.goodt.me</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PORT_TOKEN_PATHER" elementType="Argument">
                <stringProp name="Argument.name">PORT_TOKEN_PATHER</stringProp>
                <stringProp name="Argument.value">9443</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PATH_PATHER" elementType="Argument">
                <stringProp name="Argument.name">PATH_PATHER</stringProp>
                <stringProp name="Argument.value">connector/api/v1/data</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST_PATHER}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">${SCHEME_PATHER}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${PATH_PATHER}</stringProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_US_2.1_Запросы" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;IT&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_3" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Металлургия, металлообработка&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_4" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Прочее&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_5" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Финансовый сектор&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_6" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Услуги для бизнеса&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_8" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Телекоммуникации, связь&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_10" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Нефть и газ&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_13" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Продукты питания&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_15" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;salary&quot;:&quot;salary&quot;,&quot;industry3&quot;:&quot;industry3&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;оклад&quot;:{&quot;$exp&quot;:&quot;avg(case when \nsalary != 0  and industry3 like  &apos;Розничная торговля&apos; then (salary) end)&quot;}},{&quot;Средний уровень&quot;:{&quot;$exp&quot;:&quot;max(&apos;Средний уровень&apos;)&quot;}},{&quot;оклада, руб.&quot;:{&quot;$exp&quot;:&quot;max(&apos;оклада, руб.&apos;)&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_19" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;стаж&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;стаж&quot;:&quot;name_experience&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_20" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;вакансии&quot;:{&quot;$exp&quot;:&quot;count (distinct (id_vacancy))&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_22" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;вакансия&quot;:{&quot;$max&quot;:&quot;professional_roles_name&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_23" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;},&quot;$filters&quot;:[{&quot;зп&quot;:{&quot;$lk&quot;:[&quot;&lt; 100 000 руб.&quot;]}}],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_25" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[{&quot;зп&quot;:{&quot;$lk&quot;:[&quot;&gt; 250 000 руб.&quot;]}}],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_26" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;salary&quot;:&quot;salary&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[{&quot;salary&quot;:{&quot;$eqn&quot;:[&quot;0&quot;]}}],&quot;$metrics&quot;:[{&quot;зп&quot;:{&quot;$avg&quot;:&quot;salary&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_28" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[{&quot;зп&quot;:{&quot;$lk&quot;:[&quot;Зарплата не указана&quot;]}}],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_29" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[{&quot;зп&quot;:{&quot;$lk&quot;:[&quot;100 000 - 250 000 руб.&quot;]}}],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_34" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;график&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;график&quot;:&quot;name_schedule&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_35" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;работодатели&quot;:{&quot;$exp&quot;:&quot;count (distinct(name_employer))&quot;}}],&quot;$dimensions&quot;:[]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_36" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;salary&quot;:&quot;salary&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;ур дохода&quot;:{&quot;$count&quot;:&quot;id_vacancy&quot;}}],&quot;$dimensions&quot;:[{&quot;зп&quot;:&quot;salary_range&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_37" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;флаг&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;flag_salary_range2&quot;:&quot;flag_salary_range2&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;флаг&quot;:&quot;flag_salary_range2&quot;},{&quot;доход&quot;:&quot;salary_range2&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_39" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;отрасль&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;отрасль&quot;:&quot;specializations_profarea_name&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_40" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;зп&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;salary&quot;:&quot;salary&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;logo_urls_240&quot;:&quot;logo_urls_240&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;created_at_date&quot;:&quot;created_at_date&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;лого&quot;:{&quot;$max&quot;:&quot;logo_urls_240&quot;}},{&quot;город&quot;:{&quot;$max&quot;:&quot;name_city&quot;}},{&quot;дата&quot;:{&quot;$max&quot;:&quot;created_at&quot;}},{&quot;зп&quot;:{&quot;$max&quot;:&quot;salary&quot;}},{&quot;координаты&quot;:{&quot;$exp&quot;:&quot;max(concat(&apos;[&apos;,lat_city,&apos;,&apos;,lng_city,&apos;]&apos;))&quot;}},{&quot;масштаб&quot;:{&quot;$exp&quot;:&quot;10&quot;}}],&quot;$dimensions&quot;:[{&quot;айди&quot;:&quot;id_vacancy&quot;},{&quot;вакансия&quot;:&quot;name_vacancy&quot;},{&quot;компания&quot;:&quot;name_employer&quot;},{&quot;дата-дата&quot;:&quot;created_at_date&quot;}]},&quot;limit&quot;:11,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_41" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;специализация&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;специализация&quot;:&quot;professional_roles_name&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_43" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;},&quot;$filters&quot;:[{&quot;тип по&quot;:{&quot;$in&quot;:[&quot;Отечественное ПО&quot;,&quot;Иностранное ПО&quot;]}}],&quot;$metrics&quot;:[{&quot;кол-во по&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;тип по&quot;:&quot;platform_type&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_44" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;должность&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;requirement&quot;:&quot;requirement&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;должность&quot;:&quot;requirement&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_45" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;кол-во вакансий&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;кол-во вакансий&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;регион&quot;:&quot;name_region&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_46" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_map&quot;],&quot;$sort&quot;:[],&quot;$fields&quot;:{&quot;state_id&quot;:&quot;state_id&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;state_name&quot;:&quot;state_name&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;вакансии&quot;:{&quot;$exp&quot;:&quot;count (distinct id_vacancy)&quot;}}],&quot;$dimensions&quot;:[{&quot;ид&quot;:&quot;state_id&quot;},{&quot;регион&quot;:&quot;state_name&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_48" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;спец&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;спец&quot;:&quot;professional_roles_name&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_49" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;кол-во вакансий&quot;:&quot;desc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;salary&quot;:&quot;salary&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[{&quot;кол-во вакансий&quot;:{&quot;$exp&quot;:&quot;count (distinct (id_vacancy))&quot;}},{&quot;зп&quot;:{&quot;$exp&quot;:&quot;avg (case when salary !=0 then salary end)&quot;}},{&quot;вакансии по позиции&quot;:{&quot;$count&quot;:&quot;id_vacancy&quot;}}],&quot;$dimensions&quot;:[{&quot;позиция&quot;:&quot;professional_roles_name&quot;}]},&quot;limit&quot;:20,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_hh_50" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;query&quot;:{&quot;$from&quot;:[&quot;dal_data_solution_job_fair_main&quot;],&quot;$sort&quot;:[{&quot;кл навыки&quot;:&quot;asc&quot;}],&quot;$fields&quot;:{&quot;lat&quot;:&quot;lat&quot;,&quot;lng&quot;:&quot;lng&quot;,&quot;name_city&quot;:&quot;name_city&quot;,&quot;name_full&quot;:&quot;name_full&quot;,&quot;to_salary&quot;:&quot;to_salary&quot;,&quot;created_at&quot;:&quot;created_at&quot;,&quot;id_vacancy&quot;:&quot;id_vacancy&quot;,&quot;industry_1&quot;:&quot;industry_1&quot;,&quot;industry_2&quot;:&quot;industry_2&quot;,&quot;from_salary&quot;:&quot;from_salary&quot;,&quot;name_region&quot;:&quot;name_region&quot;,&quot;requirement&quot;:&quot;requirement&quot;,&quot;name_country&quot;:&quot;name_country&quot;,&quot;name_vacancy&quot;:&quot;name_vacancy&quot;,&quot;salary_range&quot;:&quot;salary_range&quot;,&quot;currency_rate&quot;:&quot;currency_rate&quot;,&quot;name_employer&quot;:&quot;name_employer&quot;,&quot;name_schedule&quot;:&quot;name_schedule&quot;,&quot;platform_name&quot;:&quot;platform_name&quot;,&quot;platform_type&quot;:&quot;platform_type&quot;,&quot;salary_range2&quot;:&quot;salary_range2&quot;,&quot;name_experience&quot;:&quot;name_experience&quot;,&quot;logo_urls_original&quot;:&quot;logo_urls_original&quot;,&quot;professional_roles_name&quot;:&quot;professional_roles_name&quot;,&quot;specializations_profarea_name&quot;:&quot;specializations_profarea_name&quot;},&quot;$filters&quot;:[],&quot;$metrics&quot;:[],&quot;$dimensions&quot;:[{&quot;кл навыки&quot;:&quot;requirement&quot;}]},&quot;limit&quot;:0,&quot;offset&quot;:0,&quot;connection&quot;:&quot;ce700909-cfcd-4bab-a7ff-5ed4d5657e3f&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept-language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-length</stringProp>
                    <stringProp name="Header.value">79</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${TOKEN_HR}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="___ЛИСЕНЕРЫ___" enabled="true"/>
      <hashTree>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">F:\rep_table.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>false</time>
              <latency>true</latency>
              <timestamp>false</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">F:\rep.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>false</time>
              <latency>true</latency>
              <timestamp>false</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">F:\rep_.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>

<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments">Незначительно рандомизировано начало выполнения сценария и  время между шагами для тредов, интенсивность держится на одном уровне в течении 280 секунд, новы треды входят постепенно </stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">${SCHEME}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="HOST" elementType="Argument">
            <stringProp name="Argument.name">HOST</stringProp>
            <stringProp name="Argument.value">partner.goodt.me</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCHEME" elementType="Argument">
            <stringProp name="Argument.name">SCHEME</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="AUTH_URL" elementType="Argument">
            <stringProp name="Argument.name">AUTH_URL</stringProp>
            <stringProp name="Argument.value">partner-auth.goodt.me</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PORT_TOKEN" elementType="Argument">
            <stringProp name="Argument.name">PORT_TOKEN</stringProp>
            <stringProp name="Argument.value">9443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influx_url" elementType="Argument">
            <stringProp name="Argument.name">influx_url</stringProp>
            <stringProp name="Argument.value">${__P(influx_db_url,http://localhost:8086/write?db=parttimer)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influx_application" elementType="Argument">
            <stringProp name="Argument.name">influx_application</stringProp>
            <stringProp name="Argument.value">${__P(influx_db_application,apple)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influx_measurement" elementType="Argument">
            <stringProp name="Argument.name">influx_measurement</stringProp>
            <stringProp name="Argument.value">${__P(influx_db_measurement,belialfff)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">${influx_url}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">${influx_application}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">${influx_measurement}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">[US|TC|&lt;|&gt;].*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">99;95;90</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">Test name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex2" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex2</stringProp>
              <stringProp name="Argument.value">[TC|&lt;|&gt;].*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV &gt;&gt;&gt; login, password " enabled="true">
        <stringProp name="filename">users5.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">name,secname,LOGIN,mail,pass1,comp</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="____ТЕСТЫ____" enabled="false"/>
      <hashTree/>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="Поиск максимальной производительсности" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">10</stringProp>
        <stringProp name="Start users count burst">10</stringProp>
        <stringProp name="Start users period">180</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">180</stringProp>
        <stringProp name="rampUp">60</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Авторизация" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1165856343">US_1_Регистрация и авторизация</stringProp>
            <stringProp name="1979215804">TC_1.3_Авторизация_csv</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Аналитика" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2129722430">US_2_Аналитика</stringProp>
            <stringProp name="219891730">TC_2.1_Аналитика</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_3_US_2_ Аналитика_карточка_новость_insight" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2129722430">US_2_Аналитика</stringProp>
            <stringProp name="-984808965">TC_2.2_Аналитика_карточка_новость_insight</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_4_US_3_ Работы" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1130912083">US_3_Работы</stringProp>
            <stringProp name="-1597373889">TC_3.1_Работы</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_5_US_3_ Работы_карточка_демо_шаблон" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1130912083">US_3_Работы</stringProp>
            <stringProp name="1943660294">TC_3.2_Работы_карточка_демо_шаблон</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_6_US_4_ Монитор_исполнения_заявок" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-329778614">US_4_Монитор_исполнения_заявок</stringProp>
            <stringProp name="1463141790">TC_4.1_Монитор_исполнения_заявок</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_7_US_5_Команды" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="759085137">US_5_Команды</stringProp>
            <stringProp name="2102572133">TC_5.1_Команды</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Подтверждение" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">50</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">1200</stringProp>
        <stringProp name="ThreadGroup.delay">1</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_1_US_1_Авторизация" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1165856343">US_1_Регистрация и авторизация</stringProp>
            <stringProp name="1979215804">TC_1.3_Авторизация_csv</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_2_US_2_ Аналитика" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2129722430">US_2_Аналитика</stringProp>
            <stringProp name="219891730">TC_2.1_Аналитика</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_3_US_2_ Аналитика_карточка_новость_insight" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2129722430">US_2_Аналитика</stringProp>
            <stringProp name="-984808965">TC_2.2_Аналитика_карточка_новость_insight</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_4_US_3_ Работы" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1130912083">US_3_Работы</stringProp>
            <stringProp name="-1597373889">TC_3.1_Работы</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_5_US_3_ Работы_карточка_демо_шаблон" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1130912083">US_3_Работы</stringProp>
            <stringProp name="1943660294">TC_3.2_Работы_карточка_демо_шаблон</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_6_US_4_ Монитор_исполнения_заявок" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-329778614">US_4_Монитор_исполнения_заявок</stringProp>
            <stringProp name="1463141790">TC_4.1_Монитор_исполнения_заявок</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="MC_7_US_5_Команды" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="759085137">US_5_Команды</stringProp>
            <stringProp name="2102572133">TC_5.1_Команды</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="____СЦЕНАРИИ___" enabled="false"/>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="US_1_Регистрация и авторизация" enabled="true"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_1.1_Регистрация" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">30</stringProp>
            <stringProp name="RandomTimer.range">30.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Записать пользоватя в csv файл" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;


String filePath = &quot;users.csv&quot;;
DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;ddMMyyyy&quot;);
String date = LocalDate.now().format(formatter);
String name = &quot;Иван&quot;;
String surname = &quot;Иванов&quot;;
String login = RandomStringUtils.random(12, &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;);
String email = login + &quot;@goodtNTtest&quot; + date + &quot;.com&quot;;
String password = &quot;12345qwerty&quot;;
String company = &quot;Goodt&quot;;
FileWriter fw = null;
        try {
            fw = new FileWriter(filePath, true);
            File file = new File(filePath);
            if (file.length() == 0) {
                fw.write(&quot;name, surname, login, email, password, company\n&quot;);
            }
            fw.write(name + &quot;,&quot; + surname + &quot;,&quot; + login + &quot;,&quot; + email + &quot;,&quot; + password + &quot;,&quot; + company + &quot;\n&quot;);
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
vars.put(&quot;NAME&quot;, name);
vars.put(&quot;SURNAME&quot;, surname);
vars.put(&quot;LOGIN&quot;, login);
vars.put(&quot;EMAIL&quot;, email);
vars.put(&quot;PASSWORD&quot;, password);
vars.put(&quot;COMPANY&quot;, company);</stringProp>
            <stringProp name="scriptLanguage">java</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Задать переменные для пользователя" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;ddMMyyyy&quot;);
String date = LocalDate.now().format(formatter);
String name = &quot;Иван&quot;;
String surname = &quot;Иванов&quot;;
String login = RandomStringUtils.random(12, &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;);
String email = login + &quot;@goodtNTtest&quot; + date + &quot;.com&quot;;
String password = &quot;12345qwerty&quot;;
String company = &quot;Goodt&quot;;
vars.put(&quot;NAME&quot;, name);
vars.put(&quot;SURNAME&quot;, surname);
vars.put(&quot;LOGIN&quot;, login);
vars.put(&quot;EMAIL&quot;, email);
vars.put(&quot;PASSWORD&quot;, password);
vars.put(&quot;COMPANY&quot;, company);</stringProp>
            <stringProp name="scriptLanguage">java</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/realms/master/protocol/openid-connect/token_0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">goodtadmin</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">BER2RlmxQW0L</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">admin-cli</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
            <stringProp name="HTTPSampler.port">9443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/master/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JsonEx&lt;&lt;&lt;TOKEN_AUTH;REFRESH_TOKEN_AUTH" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">TOKEN_AUTH;REFRESH_TOKEN_AUTH</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.refresh_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;NO_REFRESH_TOKEN</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="jsr &lt;&lt;&lt; csv_users" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;ddMMyyyy&quot;);
String date = LocalDate.now().format(formatter);
String name = &quot;Иван&quot;;
String surname = &quot;Иванов&quot;;
String login = RandomStringUtils.random(12, &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;);
String email = login + &quot;@goodtNTtest&quot; + date + &quot;.com&quot;;
String password = &quot;12345qwerty&quot;;
String company = &quot;Goodt&quot;;
vars.put(&quot;NAME&quot;, name);
vars.put(&quot;SURNAME&quot;, surname);
vars.put(&quot;LOGIN&quot;, login);
vars.put(&quot;EMAIL&quot;, email);
vars.put(&quot;PASSWORD&quot;, password);
vars.put(&quot;COMPANY&quot;, company);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/admin/realms/insight_partners/users_1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
&#xd;
&#xd;
  &quot;username&quot; : &quot;${LOGIN}&quot;,&#xd;
&#xd;
&#xd;
&#xd;
  &quot;email&quot; : &quot;${EMAIL}&quot;,&#xd;
&#xd;
&#xd;
&#xd;
  &quot;emailVerified&quot; : &quot;true&quot;,&#xd;
&#xd;
&#xd;
&#xd;
  &quot;enabled&quot; : &quot;true&quot;,&#xd;
&#xd;
&#xd;
&#xd;
  &quot;attributes&quot; : {&#xd;
&#xd;
&#xd;
&#xd;
    &quot;acceptTerms&quot; : &quot;on&quot;,&#xd;
&#xd;
&#xd;
&#xd;
    &quot;company&quot;: &quot;Goodt&quot;&#xd;
&#xd;
&#xd;
&#xd;
  },&#xd;
&#xd;
&#xd;
&#xd;
  &quot;credentials&quot; : [ {&#xd;
&#xd;
&#xd;
&#xd;
    &quot;temporary&quot; : &quot;false&quot;,&#xd;
&#xd;
&#xd;
&#xd;
    &quot;type&quot; : &quot;password&quot;,&#xd;
&#xd;
&#xd;
&#xd;
    &quot;value&quot; : &quot;${PASSWORD}&quot;&#xd;
&#xd;
&#xd;
&#xd;
  } ]&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner-auth.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/admin/realms/insight_partners/users</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN_AUTH}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_auth/admin/realms/insight_partners/users_2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="exact" elementType="HTTPArgument">
                  <stringProp name="Argument.name">exact</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">${LOGIN}</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/admin/realms/insight_partners/users</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN_AUTH}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="jsonEx&lt;&lt;&lt;USER_ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">USER_ID;</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$[0].id;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="jsr &gt;&gt;&gt; user_csv" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

String filePath = &quot;users5.csv&quot;;
FileWriter fw = null;
        try {
            fw = new FileWriter(filePath, true);
            File file = new File(filePath);
            if (file.length() == 0) {
                fw.write(&quot;name, surname, login, email, password, company, id\n&quot;);
            }
            fw.write(&quot;${NAME}&quot; + &quot;,&quot; + &quot;${SURNAME}&quot; + &quot;,&quot; + &quot;${LOGIN}&quot; + &quot;,&quot; + &quot;${EMAIL}&quot; + &quot;,&quot; + &quot;${PASSWORD}&quot; + &quot;,&quot; + &quot;${COMPANY}&quot; + &quot;,&quot; + &quot;${USER_ID}&quot; + &quot;\n&quot;);
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Записать пользователя в csv файл" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.commons.lang3.RandomStringUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

String filePath = &quot;users5.csv&quot;;
FileWriter fw = null;
        try {
            fw = new FileWriter(filePath, true);
            File file = new File(filePath);
            if (file.length() == 0) {
                fw.write(&quot;name, surname, login, email, password, company, id\n&quot;);
            }
            fw.write(&quot;${NAME}&quot; + &quot;,&quot; + &quot;${SURNAME}&quot; + &quot;,&quot; + &quot;${LOGIN}&quot; + &quot;,&quot; + &quot;${EMAIL}&quot; + &quot;,&quot; + &quot;${PASSWORD}&quot; + &quot;,&quot; + &quot;${COMPANY}&quot; + &quot;,&quot; + &quot;${USER_ID}&quot; + &quot;\n&quot;);
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
</stringProp>
            <stringProp name="scriptLanguage">java</stringProp>
          </JSR223Sampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TC_1.2_Авторизация_jsr" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">30</stringProp>
            <stringProp name="RandomTimer.range">30.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/realms/insight_partners/protocol/openid-connect/token_3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">player</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${LOGIN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${PASSWORD}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/insight_partners/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">https://partner-auth.goodt.me:9443/auth/realms/insight_partners/protocol/openid-connect/token</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="jsonEx&lt;&lt;&lt;TOKEN;REFRESH_TOKEN" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">TOKEN;REFRESH_TOKEN</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.refresh_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;NO_REFRESH_TOKEN</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">79</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/folder_4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/folder</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="jsonEx&lt;&lt;&lt;ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_ID</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/project_5" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/project</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="TC_1.3_Авторизация_csv" enabled="true">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">true</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">30</stringProp>
            <stringProp name="RandomTimer.range">30.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_auth/realms/insight_partners/protocol/openid-connect/token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">player</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${LOGIN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${pass1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${AUTH_URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT_TOKEN}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">auth/realms/insight_partners/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">https://partner-auth.goodt.me:9443/auth/realms/insight_partners/protocol/openid-connect/token</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="jsonEx&lt;&lt;&lt;TOKEN;REFRESH_TOKEN" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">TOKEN;REFRESH_TOKEN</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token;$.refresh_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NO_TOKEN;NO_REFRESH_TOKEN</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">79</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/folder" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/folder</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="jsonEx&lt;&lt;&lt;ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_ID</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&lt;_api/project" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/project</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="US_2_Аналитика" enabled="true"/>
      <hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="TC_2.1_Аналитика" enabled="true">
          <intProp name="MAX_THREAD_NUMBER">2</intProp>
          <boolProp name="PARENT_SAMPLE">true</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_9" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;module&quot;: &quot;module&quot;,&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;page&quot;: &quot;page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;chapter_page_name&quot;: &quot;chapter_page_name&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;uniq_name&quot;: &quot;uniq_name&quot;,&#xd;
            &quot;url&quot;: &quot;url&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;сортировка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;sort&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;уникальное название блока&quot;: {&#xd;
                    &quot;$max&quot;: &quot;unique_name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$max&quot;: &quot;chapter_page&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;измерение&quot;: &quot;chapter_page&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;сортировка&quot;: &quot;asc&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 60,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_10" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;module&quot;: &quot;module&quot;,&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;page&quot;: &quot;page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;chapter_page_name&quot;: &quot;chapter_page_name&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;uniq_name&quot;: &quot;uniq_name&quot;,&#xd;
            &quot;url&quot;: &quot;url&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;лого&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;&apos;upload/57337/inisght_logo.svg&apos;&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;1&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 60,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_11" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;module&quot;: &quot;module&quot;,&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;page&quot;: &quot;page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;chapter_page_name&quot;: &quot;chapter_page_name&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;uniq_name&quot;: &quot;uniq_name&quot;,&#xd;
            &quot;url&quot;: &quot;url&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;mdi&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;&apos;mdi-table-edit&apos;&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;name&quot;: {&#xd;
                    &quot;$max&quot;: &quot;chapter_page&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;&apos;https://partner.goodt.me/editor/#/apps&apos;&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;название&quot;: &quot;chapter_page&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;chapter_page&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;Редактор Insight&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_12" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;фото&quot;: &quot;photo_user&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_13" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;module&quot;: &quot;module&quot;,&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;page&quot;: &quot;page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;chapter_page_name&quot;: &quot;chapter_page_name&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;uniq_name&quot;: &quot;uniq_name&quot;,&#xd;
            &quot;url&quot;: &quot;url&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$max&quot;: &quot;chapter_page&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;внешняя ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_external&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;имя&quot;: {&#xd;
                    &quot;$max&quot;: &quot;unique_name&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;url_external&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;asc&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_14" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;module&quot;: &quot;module&quot;,&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;page&quot;: &quot;page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;chapter_page_name&quot;: &quot;chapter_page_name&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;uniq_name&quot;: &quot;uniq_name&quot;,&#xd;
            &quot;url&quot;: &quot;url&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$max&quot;: &quot;chapter_page&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;внешняя ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_external&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;имя&quot;: {&#xd;
                    &quot;$max&quot;: &quot;unique_name&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;url_external&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;asc&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_15" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;snippet_id&quot;: &quot;snippet_id&quot;,&#xd;
            &quot;snippet_name&quot;: &quot;snippet_name&quot;,&#xd;
            &quot;snippet_date&quot;: &quot;snippet_date&quot;,&#xd;
            &quot;snippet_description&quot;: &quot;snippet_description&quot;,&#xd;
            &quot;snippet_author&quot;: &quot;snippet_author&quot;,&#xd;
            &quot;snippet_tag&quot;: &quot;snippet_tag&quot;,&#xd;
            &quot;snippet_photo&quot;: &quot;snippet_photo&quot;,&#xd;
            &quot;snippet_screen&quot;: &quot;snippet_screen&quot;,&#xd;
            &quot;snippet_player&quot;: &quot;snippet_player&quot;,&#xd;
            &quot;snippet_app&quot;: &quot;snippet_app&quot;,&#xd;
            &quot;snippet_app_mdi&quot;: &quot;snippet_app_mdi&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_marketplace_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название&quot;: {&#xd;
                    &quot;$max&quot;: &quot;snippet_name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;дата&quot;: {&#xd;
                    &quot;$max&quot;: &quot;snippet_date&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;автор&quot;: {&#xd;
                    &quot;$max&quot;: &quot;snippet_author&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$max&quot;: &quot;snippet_tag&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;фото&quot;: {&#xd;
                    &quot;$max&quot;: &quot;snippet_photo&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;скрин&quot;: {&#xd;
                    &quot;$max&quot;: &quot;snippet_screen&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;создание&quot;: {&#xd;
                    &quot;$max&quot;: &quot;snippet_app&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;картинка создания&quot;: {&#xd;
                    &quot;$max&quot;: &quot;snippet_app_mdi&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;snippet_id&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;8&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;asc&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 8,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_16" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;folder_id&quot;: &quot;folder_id&quot;,&#xd;
            &quot;project_type_id&quot;: &quot;project_type_id&quot;,&#xd;
            &quot;slug&quot;: &quot;slug&quot;,&#xd;
            &quot;title&quot;: &quot;title&quot;,&#xd;
            &quot;description&quot;: &quot;description&quot;,&#xd;
            &quot;owner_id&quot;: &quot;owner_id&quot;,&#xd;
            &quot;date_from&quot;: &quot;date_from&quot;,&#xd;
            &quot;date_to&quot;: &quot;date_to&quot;,&#xd;
            &quot;is_shared_group&quot;: &quot;is_shared_group&quot;,&#xd;
            &quot;can_shared_group_edit&quot;: &quot;can_shared_group_edit&quot;,&#xd;
            &quot;name&quot;: &quot;name&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;applications&quot;,&#xd;
            &quot;project&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;кол-во&quot;: {&#xd;
                    &quot;$count&quot;: &quot;id&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [],&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_17" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_internal&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: &quot;chapter_page&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;Сообщество&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_18" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_internal&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: &quot;chapter_page&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;Документация&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_19" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_internal&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: &quot;chapter_page&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;Библиотека данных&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_20" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_internal&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: &quot;chapter_page&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;Маркетплейс&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_21" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_internal&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: &quot;chapter_page&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;Работы&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_22" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_internal&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: &quot;chapter_page&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;Главная&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_23" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;module&quot;: &quot;module&quot;,&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;page&quot;: &quot;page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;chapter_page_name&quot;: &quot;chapter_page_name&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;uniq_name&quot;: &quot;uniq_name&quot;,&#xd;
            &quot;url&quot;: &quot;url&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$max&quot;: &quot;chapter_page&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;внешняя ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_external&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;имя&quot;: {&#xd;
                    &quot;$max&quot;: &quot;unique_name&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;url_external&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;asc&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_24" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;module&quot;: &quot;module&quot;,&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;page&quot;: &quot;page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;chapter_page_name&quot;: &quot;chapter_page_name&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;uniq_name&quot;: &quot;uniq_name&quot;,&#xd;
            &quot;url&quot;: &quot;url&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$max&quot;: &quot;chapter_page&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;внешняя ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_external&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;имя&quot;: {&#xd;
                    &quot;$max&quot;: &quot;unique_name&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;url_external&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;asc&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_25" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;module&quot;: &quot;module&quot;,&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;page&quot;: &quot;page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;chapter_page_name&quot;: &quot;chapter_page_name&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;uniq_name&quot;: &quot;uniq_name&quot;,&#xd;
            &quot;url&quot;: &quot;url&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$max&quot;: &quot;chapter_page&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;внешняя ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_external&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;имя&quot;: {&#xd;
                    &quot;$max&quot;: &quot;unique_name&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;url_external&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;asc&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_26" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;module&quot;: &quot;module&quot;,&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;page&quot;: &quot;page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;chapter_page_name&quot;: &quot;chapter_page_name&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;uniq_name&quot;: &quot;uniq_name&quot;,&#xd;
            &quot;url&quot;: &quot;url&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$max&quot;: &quot;chapter_page&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;внешняя ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_external&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;имя&quot;: {&#xd;
                    &quot;$max&quot;: &quot;unique_name&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;url_external&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;asc&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_27" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;module&quot;: &quot;module&quot;,&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;page&quot;: &quot;page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;chapter_page_name&quot;: &quot;chapter_page_name&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;uniq_name&quot;: &quot;uniq_name&quot;,&#xd;
            &quot;url&quot;: &quot;url&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$max&quot;: &quot;chapter_page&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;внешняя ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_external&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;имя&quot;: {&#xd;
                    &quot;$max&quot;: &quot;unique_name&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;url_external&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;asc&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_28" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;module&quot;: &quot;module&quot;,&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;page&quot;: &quot;page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;chapter_page_name&quot;: &quot;chapter_page_name&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;uniq_name&quot;: &quot;uniq_name&quot;,&#xd;
            &quot;url&quot;: &quot;url&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$max&quot;: &quot;chapter_page&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;внешняя ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_external&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;имя&quot;: {&#xd;
                    &quot;$max&quot;: &quot;unique_name&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;url_external&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;asc&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_29" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;module&quot;: &quot;module&quot;,&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;page&quot;: &quot;page&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;,&#xd;
            &quot;chapter_page&quot;: &quot;chapter_page&quot;,&#xd;
            &quot;chapter_page_name&quot;: &quot;chapter_page_name&quot;,&#xd;
            &quot;is_enabled&quot;: &quot;is_enabled&quot;,&#xd;
            &quot;uniq_name&quot;: &quot;uniq_name&quot;,&#xd;
            &quot;url&quot;: &quot;url&quot;,&#xd;
            &quot;unique_name&quot;: &quot;unique_name&quot;,&#xd;
            &quot;url_internal&quot;: &quot;url_internal&quot;,&#xd;
            &quot;event_name&quot;: &quot;event_name&quot;,&#xd;
            &quot;photo_user&quot;: &quot;photo_user&quot;,&#xd;
            &quot;url_external&quot;: &quot;url_external&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_module_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название блока&quot;: {&#xd;
                    &quot;$max&quot;: &quot;chapter_page&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;внешняя ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;url_external&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;имя&quot;: {&#xd;
                    &quot;$max&quot;: &quot;unique_name&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;url_external&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;asc&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_30" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;folder_id&quot;: &quot;folder_id&quot;,&#xd;
            &quot;project_type_id&quot;: &quot;project_type_id&quot;,&#xd;
            &quot;slug&quot;: &quot;slug&quot;,&#xd;
            &quot;title&quot;: &quot;title&quot;,&#xd;
            &quot;description&quot;: &quot;description&quot;,&#xd;
            &quot;owner_id&quot;: &quot;owner_id&quot;,&#xd;
            &quot;date_from&quot;: &quot;date_from&quot;,&#xd;
            &quot;date_to&quot;: &quot;date_to&quot;,&#xd;
            &quot;is_shared_group&quot;: &quot;is_shared_group&quot;,&#xd;
            &quot;can_shared_group_edit&quot;: &quot;can_shared_group_edit&quot;,&#xd;
            &quot;name&quot;: &quot;name&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;applications&quot;,&#xd;
            &quot;project&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;кол-во&quot;: {&#xd;
                    &quot;$count&quot;: &quot;id&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [],&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_31" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id_news&quot;: &quot;id_news&quot;,&#xd;
            &quot;news_type&quot;: &quot;news_type&quot;,&#xd;
            &quot;news_data&quot;: &quot;news_data&quot;,&#xd;
            &quot;news_time&quot;: &quot;news_time&quot;,&#xd;
            &quot;news_name&quot;: &quot;news_name&quot;,&#xd;
            &quot;news_description&quot;: &quot;news_description&quot;,&#xd;
            &quot;news_photo&quot;: &quot;news_photo&quot;,&#xd;
            &quot;news_link&quot;: &quot;news_link&quot;,&#xd;
            &quot;news_popup_link&quot;: &quot;news_popup_link&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_news_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название&quot;: {&#xd;
                    &quot;$max&quot;: &quot;news_name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;описание&quot;: {&#xd;
                    &quot;$max&quot;: &quot;news_description&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;фото&quot;: {&#xd;
                    &quot;$max&quot;: &quot;news_photo&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$max&quot;: &quot;news_type&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;news_link&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;дата&quot;: {&#xd;
                    &quot;$max&quot;: &quot;news_data&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;время&quot;: {&#xd;
                    &quot;$max&quot;: &quot;news_time&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id_news&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка на попап&quot;: &quot;news_popup_link&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;дата&quot;: &quot;desc&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 3,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_32" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;folder_id&quot;: &quot;folder_id&quot;,&#xd;
            &quot;project_type_id&quot;: &quot;project_type_id&quot;,&#xd;
            &quot;slug&quot;: &quot;slug&quot;,&#xd;
            &quot;title&quot;: &quot;title&quot;,&#xd;
            &quot;description&quot;: &quot;description&quot;,&#xd;
            &quot;owner_id&quot;: &quot;owner_id&quot;,&#xd;
            &quot;date_from&quot;: &quot;date_from&quot;,&#xd;
            &quot;date_to&quot;: &quot;date_to&quot;,&#xd;
            &quot;is_shared_group&quot;: &quot;is_shared_group&quot;,&#xd;
            &quot;can_shared_group_edit&quot;: &quot;can_shared_group_edit&quot;,&#xd;
            &quot;name&quot;: &quot;name&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;applications&quot;,&#xd;
            &quot;project&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;фото&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;&apos;upload/57337/back_pop.svg&apos;&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$max&quot;: &quot;name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;конкат&quot;: {&#xd;
                    &quot;$gcu&quot;: &quot;name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;название&quot;: {&#xd;
                    &quot;$max&quot;: &quot;title&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка на плеер&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;concat(&apos;https://partner.goodt.me/editor/player/&apos;,min(id),&apos;/&apos;)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка на редактор&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;concat(&apos;https://partner.goodt.me/editor/player/&apos;,min(id),&apos;/&apos;)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 6,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="TC_2.2_Аналитика_карточка_новость_insight" enabled="true">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">true</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_33" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id_news&quot;: &quot;id_news&quot;,&#xd;
            &quot;news_type&quot;: &quot;news_type&quot;,&#xd;
            &quot;news_data&quot;: &quot;news_data&quot;,&#xd;
            &quot;news_time&quot;: &quot;news_time&quot;,&#xd;
            &quot;news_name&quot;: &quot;news_name&quot;,&#xd;
            &quot;news_description&quot;: &quot;news_description&quot;,&#xd;
            &quot;news_photo&quot;: &quot;news_photo&quot;,&#xd;
            &quot;news_link&quot;: &quot;news_link&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_news_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название&quot;: {&#xd;
                    &quot;$max&quot;: &quot;news_name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;описание&quot;: {&#xd;
                    &quot;$max&quot;: &quot;news_description&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;фото&quot;: {&#xd;
                    &quot;$max&quot;: &quot;news_photo&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$max&quot;: &quot;news_type&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка&quot;: {&#xd;
                    &quot;$max&quot;: &quot;news_link&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;дата&quot;: {&#xd;
                    &quot;$max&quot;: &quot;news_data&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;время&quot;: {&#xd;
                    &quot;$max&quot;: &quot;news_time&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;лайки&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;&apos;10&apos;&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id_news&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;2&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;дата&quot;: &quot;desc&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="US_3_Работы" enabled="true"/>
      <hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="TC_3.1_Работы" enabled="true">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">true</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_34" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;folder_id&quot;: &quot;folder_id&quot;,&#xd;
            &quot;project_type_id&quot;: &quot;project_type_id&quot;,&#xd;
            &quot;slug&quot;: &quot;slug&quot;,&#xd;
            &quot;title&quot;: &quot;title&quot;,&#xd;
            &quot;description&quot;: &quot;description&quot;,&#xd;
            &quot;owner_id&quot;: &quot;owner_id&quot;,&#xd;
            &quot;date_from&quot;: &quot;date_from&quot;,&#xd;
            &quot;date_to&quot;: &quot;date_to&quot;,&#xd;
            &quot;is_shared_group&quot;: &quot;is_shared_group&quot;,&#xd;
            &quot;can_shared_group_edit&quot;: &quot;can_shared_group_edit&quot;,&#xd;
            &quot;name&quot;: &quot;name&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;applications&quot;,&#xd;
            &quot;project&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;кол-во&quot;: {&#xd;
                    &quot;$count&quot;: &quot;id&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [],&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_35" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;folder_id&quot;: &quot;folder_id&quot;,&#xd;
            &quot;project_type_id&quot;: &quot;project_type_id&quot;,&#xd;
            &quot;slug&quot;: &quot;slug&quot;,&#xd;
            &quot;title&quot;: &quot;title&quot;,&#xd;
            &quot;description&quot;: &quot;description&quot;,&#xd;
            &quot;owner_id&quot;: &quot;owner_id&quot;,&#xd;
            &quot;date_from&quot;: &quot;date_from&quot;,&#xd;
            &quot;date_to&quot;: &quot;date_to&quot;,&#xd;
            &quot;is_shared_group&quot;: &quot;is_shared_group&quot;,&#xd;
            &quot;can_shared_group_edit&quot;: &quot;can_shared_group_edit&quot;,&#xd;
            &quot;name&quot;: &quot;name&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;applications&quot;,&#xd;
            &quot;project&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;тег&quot;: &quot;name&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 6,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_36" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;num&quot;: &quot;num&quot;,&#xd;
            &quot;title&quot;: &quot;title&quot;,&#xd;
            &quot;in_gallery&quot;: &quot;in_gallery&quot;,&#xd;
            &quot;prefix&quot;: &quot;prefix&quot;,&#xd;
            &quot;link_player&quot;: &quot;link_player&quot;,&#xd;
            &quot;editor_demo_link&quot;: &quot;editor_demo_link&quot;,&#xd;
            &quot;status&quot;: &quot;status&quot;,&#xd;
            &quot;photo&quot;: &quot;photo&quot;,&#xd;
            &quot;tags&quot;: &quot;tags&quot;,&#xd;
            &quot;tags_type&quot;: &quot;tags_type&quot;,&#xd;
            &quot;comments&quot;: &quot;comments&quot;,&#xd;
            &quot;author_type&quot;: &quot;author_type&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;home&quot;,&#xd;
            &quot;portal_home_dashboard_config&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название&quot;: {&#xd;
                    &quot;$max&quot;: &quot;title&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка на плеер&quot;: {&#xd;
                    &quot;$max&quot;: &quot;link_player&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка на редактор&quot;: {&#xd;
                    &quot;$max&quot;: &quot;editor_demo_link&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;фото&quot;: {&#xd;
                    &quot;$max&quot;: &quot;photo&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;конкат&quot;: {&#xd;
                    &quot;$gcu&quot;: &quot;tags&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;автор&quot;: &quot;author_type&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 50,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_37" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;folder_id&quot;: &quot;folder_id&quot;,&#xd;
            &quot;project_type_id&quot;: &quot;project_type_id&quot;,&#xd;
            &quot;slug&quot;: &quot;slug&quot;,&#xd;
            &quot;title&quot;: &quot;title&quot;,&#xd;
            &quot;description&quot;: &quot;description&quot;,&#xd;
            &quot;owner_id&quot;: &quot;owner_id&quot;,&#xd;
            &quot;date_from&quot;: &quot;date_from&quot;,&#xd;
            &quot;date_to&quot;: &quot;date_to&quot;,&#xd;
            &quot;is_shared_group&quot;: &quot;is_shared_group&quot;,&#xd;
            &quot;can_shared_group_edit&quot;: &quot;can_shared_group_edit&quot;,&#xd;
            &quot;name&quot;: &quot;name&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;applications&quot;,&#xd;
            &quot;project&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;фото&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;&apos;upload/57304/back_pop.svg&apos;&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$max&quot;: &quot;name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;конкат&quot;: {&#xd;
                    &quot;$gcu&quot;: &quot;name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка на плеер&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;concat(&apos;https://partner.goodt.me/editor/player/&apos;,min(id),&apos;/&apos;)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка на редактор&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;concat(&apos;https://partner.goodt.me/editor/player/&apos;,min(id),&apos;/&apos;)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;название&quot;: &quot;title&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 6,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_38" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;folder_id&quot;: &quot;folder_id&quot;,&#xd;
            &quot;project_type_id&quot;: &quot;project_type_id&quot;,&#xd;
            &quot;slug&quot;: &quot;slug&quot;,&#xd;
            &quot;title&quot;: &quot;title&quot;,&#xd;
            &quot;description&quot;: &quot;description&quot;,&#xd;
            &quot;owner_id&quot;: &quot;owner_id&quot;,&#xd;
            &quot;date_from&quot;: &quot;date_from&quot;,&#xd;
            &quot;date_to&quot;: &quot;date_to&quot;,&#xd;
            &quot;is_shared_group&quot;: &quot;is_shared_group&quot;,&#xd;
            &quot;can_shared_group_edit&quot;: &quot;can_shared_group_edit&quot;,&#xd;
            &quot;name&quot;: &quot;name&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;applications&quot;,&#xd;
            &quot;project&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;кол-во&quot;: {&#xd;
                    &quot;$count&quot;: &quot;id&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_39" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;folder_id&quot;: &quot;folder_id&quot;,&#xd;
            &quot;project_type_id&quot;: &quot;project_type_id&quot;,&#xd;
            &quot;slug&quot;: &quot;slug&quot;,&#xd;
            &quot;title&quot;: &quot;title&quot;,&#xd;
            &quot;description&quot;: &quot;description&quot;,&#xd;
            &quot;owner_id&quot;: &quot;owner_id&quot;,&#xd;
            &quot;date_from&quot;: &quot;date_from&quot;,&#xd;
            &quot;date_to&quot;: &quot;date_to&quot;,&#xd;
            &quot;is_shared_group&quot;: &quot;is_shared_group&quot;,&#xd;
            &quot;can_shared_group_edit&quot;: &quot;can_shared_group_edit&quot;,&#xd;
            &quot;name&quot;: &quot;name&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;applications&quot;,&#xd;
            &quot;project&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;фото&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;&apos;upload/57337/back_pop.svg&apos;&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$max&quot;: &quot;name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;конкат&quot;: {&#xd;
                    &quot;$gc&quot;: &quot;name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;название&quot;: {&#xd;
                    &quot;$max&quot;: &quot;title&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка на плеер&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;concat(&apos;https://partner.goodt.me/editor/player/&apos;,min(id),&apos;/&apos;)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка на редактор&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;concat(&apos;https://partner.goodt.me/editor/player/&apos;,min(id),&apos;/&apos;)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 60,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="TC_3.2_Работы_карточка_демо_шаблон" enabled="true">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">true</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_40" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;folder_id&quot;: &quot;folder_id&quot;,&#xd;
            &quot;project_type_id&quot;: &quot;project_type_id&quot;,&#xd;
            &quot;slug&quot;: &quot;slug&quot;,&#xd;
            &quot;title&quot;: &quot;title&quot;,&#xd;
            &quot;description&quot;: &quot;description&quot;,&#xd;
            &quot;owner_id&quot;: &quot;owner_id&quot;,&#xd;
            &quot;date_from&quot;: &quot;date_from&quot;,&#xd;
            &quot;date_to&quot;: &quot;date_to&quot;,&#xd;
            &quot;is_shared_group&quot;: &quot;is_shared_group&quot;,&#xd;
            &quot;can_shared_group_edit&quot;: &quot;can_shared_group_edit&quot;,&#xd;
            &quot;name&quot;: &quot;name&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;applications&quot;,&#xd;
            &quot;project&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;фото&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;&apos;upload/57337/back_pop.svg&apos;&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$max&quot;: &quot;name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;конкат&quot;: {&#xd;
                    &quot;$gcu&quot;: &quot;name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;название&quot;: {&#xd;
                    &quot;$max&quot;: &quot;title&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка на плеер&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;concat(&apos;https://partner.goodt.me/editor/player/&apos;,min(id),&apos;/&apos;)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка на редактор&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;concat(&apos;https://partner.goodt.me/editor/player/&apos;,min(id),&apos;/&apos;)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;название&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;Демо-шаблон&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_41" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;id&quot;: &quot;id&quot;,&#xd;
            &quot;folder_id&quot;: &quot;folder_id&quot;,&#xd;
            &quot;project_type_id&quot;: &quot;project_type_id&quot;,&#xd;
            &quot;slug&quot;: &quot;slug&quot;,&#xd;
            &quot;title&quot;: &quot;title&quot;,&#xd;
            &quot;description&quot;: &quot;description&quot;,&#xd;
            &quot;owner_id&quot;: &quot;owner_id&quot;,&#xd;
            &quot;date_from&quot;: &quot;date_from&quot;,&#xd;
            &quot;date_to&quot;: &quot;date_to&quot;,&#xd;
            &quot;is_shared_group&quot;: &quot;is_shared_group&quot;,&#xd;
            &quot;can_shared_group_edit&quot;: &quot;can_shared_group_edit&quot;,&#xd;
            &quot;name&quot;: &quot;name&quot;&#xd;
        },&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;insight&quot;,&#xd;
            &quot;data&quot;,&#xd;
            &quot;portal&quot;,&#xd;
            &quot;applications&quot;,&#xd;
            &quot;project&quot;&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;фото&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;&apos;upload/57337/back_pop.svg&apos;&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$max&quot;: &quot;name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;конкат&quot;: {&#xd;
                    &quot;$gcu&quot;: &quot;name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;название&quot;: {&#xd;
                    &quot;$max&quot;: &quot;title&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка на плеер&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;concat(&apos;https://partner.goodt.me/editor/player/&apos;,min(id),&apos;/&apos;)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;ссылка на редактор&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;concat(&apos;https://partner.goodt.me/editor/player/&apos;,min(id),&apos;/&apos;)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;id&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;тег&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;название&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;Демо-шаблон&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$sort&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: &quot;83f19c7f-850d-47ac-a698-1b9c1bab6085&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="US_4_Монитор_исполнения_заявок" enabled="true"/>
      <hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="TC_4.1_Монитор_исполнения_заявок" enabled="true">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">true</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_42" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;district&quot;: &quot;district&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;deadline_month_year&quot;: &quot;deadline_month_year&quot;,&#xd;
            &quot;status_of_the_contract&quot;: &quot;status_of_the_contract&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;количество&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;count(case when general_status not in (&apos;Аннулирована&apos;,&apos;Отказано в заключении договора&apos;, &apos;Отменена&apos;) then application_number end)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;количество всего&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;count(application_number)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_43" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;district&quot;: &quot;district&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;deadline_month_year&quot;: &quot;deadline_month_year&quot;,&#xd;
            &quot;status_of_the_contract&quot;: &quot;status_of_the_contract&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;количество&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;count(case when general_status =&apos;Выполнено подключение (Пуск газа)&apos; and status_of_the_contract=&apos;Действующий&apos; then application_number end)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;бенч&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;CAST(count(case when general_status =&apos;Выполнено подключение (Пуск газа)&apos; and status_of_the_contract=&apos;Действующий&apos; then application_number end) as FLOAT) /NULLIF(count(case when general_status not in (&apos;Аннулирована&apos;,&apos;Отказано в заключении договора&apos;, &apos;Отменена&apos;) and status_of_the_contract=&apos;Действующий&apos;then application_number end),0)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_44" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;1_project_team_management&quot;,&#xd;
            &quot;dal_data_solution_project_team_management_main&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;percent_competence&quot;: &quot;percent_competence&quot;,&#xd;
            &quot;project_participation_percent&quot;: &quot;project_participation_percent&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;val&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;avg(case when percent_competence !=0 then percent_competence end)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;icon&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;min(&apos;mdi-bookmark-box-multiple-outline&apos;)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_45" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;district&quot;: &quot;district&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;deadline_month_year&quot;: &quot;deadline_month_year&quot;,&#xd;
            &quot;status_of_the_contract&quot;: &quot;status_of_the_contract&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;количество&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;count(case when general_status in (&apos;Выполнение фактического присоединения&apos;,&apos;Выполнено подключение (Пуск газа)&apos;) and status_of_the_contract=&apos;Действующий&apos; then application_number end)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;бенч&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;CAST(count(case when general_status in (&apos;Выполнение фактического присоединения&apos;,&apos;Выполнено подключение (Пуск газа)&apos;) and status_of_the_contract=&apos;Действующий&apos; then application_number end) as FLOAT) / NULLIF(count(case when general_status not in (&apos;Аннулирована&apos;,&apos;Отказано в заключении договора&apos;, &apos;Отменена&apos;) and status_of_the_contract=&apos;Действующий&apos;then application_number end),0)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_46" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;district&quot;: &quot;district&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;deadline_month_year&quot;: &quot;deadline_month_year&quot;,&#xd;
            &quot;status_of_the_contract&quot;: &quot;status_of_the_contract&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;количество&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;count(case when general_status not in (&apos;Аннулирована&apos;,&apos;Отказано в заключении договора&apos;, &apos;Отменена&apos;) and status_of_the_contract=&apos;Действующий&apos; then application_number end)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;бенч&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;CAST(count(case when general_status not in (&apos;Аннулирована&apos;,&apos;Отказано в заключении договора&apos;, &apos;Отменена&apos;) and status_of_the_contract=&apos;Действующий&apos;then application_number end) as FLOAT)/NULLIF(count(case when general_status not in (&apos;Аннулирована&apos;,&apos;Отказано в заключении договора&apos;,&apos;Отменена&apos;) then application_number end),0)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_47" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;district&quot;: &quot;district&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;deadline_month_year&quot;: &quot;deadline_month_year&quot;,&#xd;
            &quot;status_of_the_contract&quot;: &quot;status_of_the_contract&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;количество&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;CAST(count(case when general_status not in (&apos;Аннулирована&apos;,&apos;Отказано в заключении договора&apos;, &apos;Отменена&apos;) then application_number end) as FLOAT)/NULLIF(count(application_number),0)\n\n&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_48" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;district&quot;: &quot;district&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;deadline_month_year&quot;: &quot;deadline_month_year&quot;,&#xd;
            &quot;status_of_the_contract&quot;: &quot;status_of_the_contract&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;количество&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;count(case when general_status in (&apos;Аннулирована&apos;,&apos;Отказано в заключении договора&apos;, &apos;Отменена&apos;) then application_number end)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;бенч&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;CAST(count(case when general_status in (&apos;Аннулирована&apos;,&apos;Отказано в заключении договора&apos;, &apos;Отменена&apos;) then application_number end) as FLOAT)/NULLIF(count(application_number),0)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_49" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;status&quot;: &quot;status&quot;,&#xd;
            &quot;district&quot;: &quot;district&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;deadline_month_year&quot;: &quot;deadline_month_year&quot;,&#xd;
            &quot;status_of_the_contract&quot;: &quot;status_of_the_contract&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;general_status&quot;: {&#xd;
                    &quot;$inn&quot;: [&#xd;
                        &quot;Аннулирована&quot;,&#xd;
                        &quot;Отказано в заключении договора&quot;,&#xd;
                        &quot;Отменена&quot;&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;status&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;количество&quot;: {&#xd;
                    &quot;$count&quot;: &quot;application_number&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_50" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;status&quot;: &quot;status&quot;,&#xd;
            &quot;district&quot;: &quot;district&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;deadline_month_year&quot;: &quot;deadline_month_year&quot;,&#xd;
            &quot;status_of_the_contract&quot;: &quot;status_of_the_contract&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;status&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;количество&quot;: {&#xd;
                    &quot;$count&quot;: &quot;application_number&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_51" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;city&quot;: &quot;city&quot;,&#xd;
            &quot;source&quot;: &quot;source&quot;,&#xd;
            &quot;street&quot;: &quot;street&quot;,&#xd;
            &quot;district&quot;: &quot;district&quot;,&#xd;
            &quot;executor&quot;: &quot;executor&quot;,&#xd;
            &quot;fias_gra&quot;: &quot;fias_gra&quot;,&#xd;
            &quot;locality&quot;: &quot;locality&quot;,&#xd;
            &quot;house_num&quot;: &quot;house_num&quot;,&#xd;
            &quot;struc_let&quot;: &quot;struc_let&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;state_name&quot;: &quot;state_name&quot;,&#xd;
            &quot;app_mm_yyyy&quot;: &quot;app_mm_yyyy&quot;,&#xd;
            &quot;house_build&quot;: &quot;house_build&quot;,&#xd;
            &quot;connect_year&quot;: &quot;connect_year&quot;,&#xd;
            &quot;date_connect&quot;: &quot;date_connect&quot;,&#xd;
            &quot;flag_connect&quot;: &quot;flag_connect&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;reas_for_rej&quot;: &quot;reas_for_rej&quot;,&#xd;
            &quot;connect_month&quot;: &quot;connect_month&quot;,&#xd;
            &quot;deadline_year&quot;: &quot;deadline_year&quot;,&#xd;
            &quot;flag_deadline&quot;: &quot;flag_deadline&quot;,&#xd;
            &quot;conn_gas_distr&quot;: &quot;conn_gas_distr&quot;,&#xd;
            &quot;deadline_month&quot;: &quot;deadline_month&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;connect_mm_yyyy&quot;: &quot;connect_mm_yyyy&quot;,&#xd;
            &quot;application_date&quot;: &quot;application_date&quot;,&#xd;
            &quot;application_year&quot;: &quot;application_year&quot;,&#xd;
            &quot;deadline_mm_yyyy&quot;: &quot;deadline_mm_yyyy&quot;,&#xd;
            &quot;flag_application&quot;: &quot;flag_application&quot;,&#xd;
            &quot;update_timestamp&quot;: &quot;update_timestamp&quot;,&#xd;
            &quot;application_month&quot;: &quot;application_month&quot;,&#xd;
            &quot;deadline_contract&quot;: &quot;deadline_contract&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;connect_month_year&quot;: &quot;connect_month_year&quot;,&#xd;
            &quot;status_of_contract&quot;: &quot;status_of_contract&quot;,&#xd;
            &quot;construction_status&quot;: &quot;construction_status&quot;,&#xd;
            &quot;deadline_month_year&quot;: &quot;deadline_month_year&quot;,&#xd;
            &quot;status_of_the_contract&quot;: &quot;status_of_the_contract&quot;,&#xd;
            &quot;status_within_the_site&quot;: &quot;status_within_the_site&quot;,&#xd;
            &quot;preferential_category_of_citizens&quot;: &quot;preferential_category_of_citizens&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;deadline_month_year&quot;: {&#xd;
                    &quot;$inn&quot;: [&#xd;
                        &quot;Янв.1990&quot;&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;connect_year&quot;: {&#xd;
                    &quot;$inn&quot;: [&#xd;
                        &quot;1990&quot;,&#xd;
                        &quot;2024&quot;,&#xd;
                        &quot;2025&quot;,&#xd;
                        &quot;2026&quot;,&#xd;
                        &quot;2027&quot;,&#xd;
                        &quot;2028&quot;,&#xd;
                        &quot;2002&quot;,&#xd;
                        &quot;2015&quot;,&#xd;
                        &quot;2016&quot;,&#xd;
                        &quot;2017&quot;,&#xd;
                        &quot;2018&quot;,&#xd;
                        &quot;2019&quot;,&#xd;
                        &quot;2020&quot;,&#xd;
                        &quot;2023&quot;&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;Месяц&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;-&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;Заявки факт&quot;: {&#xd;
                    &quot;$count&quot;: &quot;application_number&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;Месяц&quot;: &quot;connect_month_year&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_52" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;Флаг&quot;: &quot;asc&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;city&quot;: &quot;city&quot;,&#xd;
            &quot;source&quot;: &quot;source&quot;,&#xd;
            &quot;street&quot;: &quot;street&quot;,&#xd;
            &quot;district&quot;: &quot;district&quot;,&#xd;
            &quot;executor&quot;: &quot;executor&quot;,&#xd;
            &quot;locality&quot;: &quot;locality&quot;,&#xd;
            &quot;house_num&quot;: &quot;house_num&quot;,&#xd;
            &quot;struc_let&quot;: &quot;struc_let&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;state_name&quot;: &quot;state_name&quot;,&#xd;
            &quot;app_mm_yyyy&quot;: &quot;app_mm_yyyy&quot;,&#xd;
            &quot;house_build&quot;: &quot;house_build&quot;,&#xd;
            &quot;connect_year&quot;: &quot;connect_year&quot;,&#xd;
            &quot;date_connect&quot;: &quot;date_connect&quot;,&#xd;
            &quot;flag_connect&quot;: &quot;flag_connect&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;reas_for_rej&quot;: &quot;reas_for_rej&quot;,&#xd;
            &quot;connect_month&quot;: &quot;connect_month&quot;,&#xd;
            &quot;deadline_year&quot;: &quot;deadline_year&quot;,&#xd;
            &quot;flag_deadline&quot;: &quot;flag_deadline&quot;,&#xd;
            &quot;conn_gas_distr&quot;: &quot;conn_gas_distr&quot;,&#xd;
            &quot;deadline_month&quot;: &quot;deadline_month&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;connect_mm_yyyy&quot;: &quot;connect_mm_yyyy&quot;,&#xd;
            &quot;application_date&quot;: &quot;application_date&quot;,&#xd;
            &quot;application_year&quot;: &quot;application_year&quot;,&#xd;
            &quot;deadline_mm_yyyy&quot;: &quot;deadline_mm_yyyy&quot;,&#xd;
            &quot;flag_application&quot;: &quot;flag_application&quot;,&#xd;
            &quot;application_month&quot;: &quot;application_month&quot;,&#xd;
            &quot;deadline_contract&quot;: &quot;deadline_contract&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;connect_month_year&quot;: &quot;connect_month_year&quot;,&#xd;
            &quot;deadline_month_year&quot;: &quot;deadline_month_year&quot;,&#xd;
            &quot;status_of_the_contract&quot;: &quot;status_of_the_contract&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;deadline_month_year&quot;: {&#xd;
                    &quot;$inn&quot;: [&#xd;
                        &quot;Янв.1990&quot;&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;deadline_year&quot;: {&#xd;
                    &quot;$inn&quot;: [&#xd;
                        &quot;2024&quot;,&#xd;
                        &quot;2025&quot;,&#xd;
                        &quot;2026&quot;,&#xd;
                        &quot;2027&quot;,&#xd;
                        &quot;2028&quot;,&#xd;
                        &quot;2002&quot;,&#xd;
                        &quot;2015&quot;,&#xd;
                        &quot;2016&quot;,&#xd;
                        &quot;2017&quot;,&#xd;
                        &quot;2018&quot;,&#xd;
                        &quot;2019&quot;,&#xd;
                        &quot;2020&quot;,&#xd;
                        &quot;2023&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;Заявки план&quot;: {&#xd;
                    &quot;$count&quot;: &quot;application_number&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;Флаг&quot;: &quot;flag_deadline&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;Месяц&quot;: &quot;deadline_month_year&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_53" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_support_str&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;year&quot;: &quot;year&quot;,&#xd;
            &quot;osvoenniye&quot;: &quot;osvoenniye&quot;,&#xd;
            &quot;region_code&quot;: &quot;region_code&quot;,&#xd;
            &quot;videlenniye&quot;: &quot;videlenniye&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;выделенные&quot;: {&#xd;
                    &quot;$max&quot;: &quot;videlenniye&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;освоенные&quot;: {&#xd;
                    &quot;$max&quot;: &quot;osvoenniye&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;год&quot;: &quot;year&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_54" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;количество&quot;: &quot;desc&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;city&quot;: &quot;city&quot;,&#xd;
            &quot;source&quot;: &quot;source&quot;,&#xd;
            &quot;street&quot;: &quot;street&quot;,&#xd;
            &quot;district&quot;: &quot;district&quot;,&#xd;
            &quot;executor&quot;: &quot;executor&quot;,&#xd;
            &quot;fias_gra&quot;: &quot;fias_gra&quot;,&#xd;
            &quot;locality&quot;: &quot;locality&quot;,&#xd;
            &quot;house_num&quot;: &quot;house_num&quot;,&#xd;
            &quot;struc_let&quot;: &quot;struc_let&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;state_name&quot;: &quot;state_name&quot;,&#xd;
            &quot;app_mm_yyyy&quot;: &quot;app_mm_yyyy&quot;,&#xd;
            &quot;house_build&quot;: &quot;house_build&quot;,&#xd;
            &quot;app_category&quot;: &quot;app_category&quot;,&#xd;
            &quot;connect_year&quot;: &quot;connect_year&quot;,&#xd;
            &quot;date_connect&quot;: &quot;date_connect&quot;,&#xd;
            &quot;flag_connect&quot;: &quot;flag_connect&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;reas_for_rej&quot;: &quot;reas_for_rej&quot;,&#xd;
            &quot;connect_month&quot;: &quot;connect_month&quot;,&#xd;
            &quot;deadline_year&quot;: &quot;deadline_year&quot;,&#xd;
            &quot;flag_deadline&quot;: &quot;flag_deadline&quot;,&#xd;
            &quot;conn_gas_distr&quot;: &quot;conn_gas_distr&quot;,&#xd;
            &quot;deadline_month&quot;: &quot;deadline_month&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;connect_mm_yyyy&quot;: &quot;connect_mm_yyyy&quot;,&#xd;
            &quot;application_year&quot;: &quot;application_year&quot;,&#xd;
            &quot;deadline_mm_yyyy&quot;: &quot;deadline_mm_yyyy&quot;,&#xd;
            &quot;flag_application&quot;: &quot;flag_application&quot;,&#xd;
            &quot;internal_app_num&quot;: &quot;internal_app_num&quot;,&#xd;
            &quot;update_timestamp&quot;: &quot;update_timestamp&quot;,&#xd;
            &quot;application_month&quot;: &quot;application_month&quot;,&#xd;
            &quot;deadline_contract&quot;: &quot;deadline_contract&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;status_of_contract&quot;: &quot;status_of_contract&quot;,&#xd;
            &quot;construction_status&quot;: &quot;construction_status&quot;,&#xd;
            &quot;status_of_the_contract&quot;: &quot;status_of_the_contract&quot;,&#xd;
            &quot;status_within_the_site&quot;: &quot;status_within_the_site&quot;,&#xd;
            &quot;preferential_category_of_citizens&quot;: &quot;preferential_category_of_citizens&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;deadline_contract&quot;: {&#xd;
                    &quot;$lt&quot;: [&#xd;
                        &quot;2023-10-02&quot;&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;general_status&quot;: {&#xd;
                    &quot;$inn&quot;: [&#xd;
                        &quot;Выполнено подключение (Пуск газа)&quot;,&#xd;
                        &quot;Выполнение фактического присоединения&quot;&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;регион&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;количество&quot;: {&#xd;
                    &quot;$count&quot;: &quot;application_number&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;регион&quot;: &quot;state_name&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 5,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_55" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_support&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;year&quot;: &quot;year&quot;,&#xd;
            &quot;amount&quot;: &quot;amount&quot;,&#xd;
            &quot;period&quot;: &quot;period&quot;,&#xd;
            &quot;category&quot;: &quot;category&quot;,&#xd;
            &quot;region_code&quot;: &quot;region_code&quot;,&#xd;
            &quot;using_mat_cap&quot;: &quot;using_mat_cap&quot;,&#xd;
            &quot;subsidies_credit&quot;: &quot;subsidies_credit&quot;,&#xd;
            &quot;update_timestamp&quot;: &quot;update_timestamp&quot;,&#xd;
            &quot;using_family_cap&quot;: &quot;using_family_cap&quot;,&#xd;
            &quot;compensation_costs&quot;: &quot;compensation_costs&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;поддержка&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;MAX(case when subsidies_credit = &apos;Да&apos; then 1 else 0 end)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_56" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_support&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;year&quot;: &quot;year&quot;,&#xd;
            &quot;amount&quot;: &quot;amount&quot;,&#xd;
            &quot;period&quot;: &quot;period&quot;,&#xd;
            &quot;category&quot;: &quot;category&quot;,&#xd;
            &quot;region_code&quot;: &quot;region_code&quot;,&#xd;
            &quot;using_mat_cap&quot;: &quot;using_mat_cap&quot;,&#xd;
            &quot;subsidies_credit&quot;: &quot;subsidies_credit&quot;,&#xd;
            &quot;update_timestamp&quot;: &quot;update_timestamp&quot;,&#xd;
            &quot;using_family_cap&quot;: &quot;using_family_cap&quot;,&#xd;
            &quot;compensation_costs&quot;: &quot;compensation_costs&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;поддержка&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;MAX(case when using_family_cap = &apos;Да&apos; then 1 else 0 end)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_57" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_support&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;year&quot;: &quot;year&quot;,&#xd;
            &quot;amount&quot;: &quot;amount&quot;,&#xd;
            &quot;period&quot;: &quot;period&quot;,&#xd;
            &quot;category&quot;: &quot;category&quot;,&#xd;
            &quot;region_code&quot;: &quot;region_code&quot;,&#xd;
            &quot;using_mat_cap&quot;: &quot;using_mat_cap&quot;,&#xd;
            &quot;subsidies_credit&quot;: &quot;subsidies_credit&quot;,&#xd;
            &quot;update_timestamp&quot;: &quot;update_timestamp&quot;,&#xd;
            &quot;using_family_cap&quot;: &quot;using_family_cap&quot;,&#xd;
            &quot;compensation_costs&quot;: &quot;compensation_costs&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;поддержка&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;MAX(case when using_mat_cap = &apos;Да&apos; then 1 else 0 end)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_58" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_support&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;year&quot;: &quot;year&quot;,&#xd;
            &quot;amount&quot;: &quot;amount&quot;,&#xd;
            &quot;period&quot;: &quot;period&quot;,&#xd;
            &quot;category&quot;: &quot;category&quot;,&#xd;
            &quot;region_code&quot;: &quot;region_code&quot;,&#xd;
            &quot;using_mat_cap&quot;: &quot;using_mat_cap&quot;,&#xd;
            &quot;subsidies_credit&quot;: &quot;subsidies_credit&quot;,&#xd;
            &quot;update_timestamp&quot;: &quot;update_timestamp&quot;,&#xd;
            &quot;using_family_cap&quot;: &quot;using_family_cap&quot;,&#xd;
            &quot;compensation_costs&quot;: &quot;compensation_costs&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;поддержка&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;max(case when compensation_costs = &apos;Да&apos; then 1 else 0 end)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;иконка&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;max(case when compensation_costs = &apos;Да&apos; then &apos;mdi-checkbox-marked-outline&apos; else &apos;mdi-checkbox-blank-outline&apos; end)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_59" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_plan_dogazification_total&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;region_code&quot;: &quot;region_code&quot;,&#xd;
            &quot;region_name&quot;: &quot;region_name&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;name_settlement&quot;: &quot;name_settlement&quot;,&#xd;
            &quot;total_num_non_gas&quot;: &quot;total_num_non_gas&quot;,&#xd;
            &quot;amount_gasificated_house&quot;: &quot;amount_gasificated_house&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;сумма&quot;: {&#xd;
                    &quot;$count&quot;: &quot;name_settlement&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;бенч&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;count(name_settlement)*3.0&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_60" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_plan_dogazification_total&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;region_code&quot;: &quot;region_code&quot;,&#xd;
            &quot;region_name&quot;: &quot;region_name&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;name_settlement&quot;: &quot;name_settlement&quot;,&#xd;
            &quot;total_num_non_gas&quot;: &quot;total_num_non_gas&quot;,&#xd;
            &quot;amount_gasificated_house&quot;: &quot;amount_gasificated_house&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;сумма&quot;: {&#xd;
                    &quot;$count&quot;: &quot;name_settlement&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;бенч&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;count(name_settlement)*3.0&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_61" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_plan_dogazification_total&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;region_code&quot;: &quot;region_code&quot;,&#xd;
            &quot;region_name&quot;: &quot;region_name&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;name_settlement&quot;: &quot;name_settlement&quot;,&#xd;
            &quot;total_num_non_gas&quot;: &quot;total_num_non_gas&quot;,&#xd;
            &quot;amount_gasificated_house&quot;: &quot;amount_gasificated_house&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;сумма&quot;: {&#xd;
                    &quot;$sum&quot;: &quot;amount_gasificated_house&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;бенч&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;sum(DISTINCT total_num_non_gas)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_62" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;state_name&quot;: &quot;state_name&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;Муниципалитет&quot;: &quot;municipality&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 30,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_63" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;state_name&quot;: &quot;state_name&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;Регион&quot;: &quot;state_name&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;Код региона&quot;: &quot;state_code&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_64" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_gallery&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;name&quot;: &quot;name&quot;,&#xd;
            &quot;slot&quot;: &quot;slot&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;1&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название&quot;: {&#xd;
                    &quot;$v&quot;: &quot;name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;слот&quot;: {&#xd;
                    &quot;$v&quot;: &quot;slot&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;id&quot;: {&#xd;
                    &quot;$v&quot;: &quot;sort&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_65" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;source&quot;: &quot;source&quot;,&#xd;
            &quot;status&quot;: &quot;status&quot;,&#xd;
            &quot;executor&quot;: &quot;executor&quot;,&#xd;
            &quot;locality&quot;: &quot;locality&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;state_name&quot;: &quot;state_name&quot;,&#xd;
            &quot;app_mm_yyyy&quot;: &quot;app_mm_yyyy&quot;,&#xd;
            &quot;connect_year&quot;: &quot;connect_year&quot;,&#xd;
            &quot;date_connect&quot;: &quot;date_connect&quot;,&#xd;
            &quot;flag_connect&quot;: &quot;flag_connect&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;reas_for_rej&quot;: &quot;reas_for_rej&quot;,&#xd;
            &quot;connect_month&quot;: &quot;connect_month&quot;,&#xd;
            &quot;deadline_year&quot;: &quot;deadline_year&quot;,&#xd;
            &quot;flag_deadline&quot;: &quot;flag_deadline&quot;,&#xd;
            &quot;deadline_month&quot;: &quot;deadline_month&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;connect_mm_yyyy&quot;: &quot;connect_mm_yyyy&quot;,&#xd;
            &quot;application_year&quot;: &quot;application_year&quot;,&#xd;
            &quot;deadline_mm_yyyy&quot;: &quot;deadline_mm_yyyy&quot;,&#xd;
            &quot;flag_application&quot;: &quot;flag_application&quot;,&#xd;
            &quot;application_month&quot;: &quot;application_month&quot;,&#xd;
            &quot;deadline_contract&quot;: &quot;deadline_contract&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;connect_month_year&quot;: &quot;connect_month_year&quot;,&#xd;
            &quot;deadline_month_year&quot;: &quot;deadline_month_year&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;количество&quot;: {&#xd;
                    &quot;$count&quot;: &quot;application_number&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;Статус&quot;: &quot;status&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_66" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_gallery&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;name&quot;: &quot;name&quot;,&#xd;
            &quot;slot&quot;: &quot;slot&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название&quot;: {&#xd;
                    &quot;$v&quot;: &quot;name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;слот&quot;: {&#xd;
                    &quot;$v&quot;: &quot;slot&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;id&quot;: {&#xd;
                    &quot;$v&quot;: &quot;sort&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_67" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;source&quot;: &quot;source&quot;,&#xd;
            &quot;status&quot;: &quot;status&quot;,&#xd;
            &quot;executor&quot;: &quot;executor&quot;,&#xd;
            &quot;locality&quot;: &quot;locality&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;state_name&quot;: &quot;state_name&quot;,&#xd;
            &quot;app_mm_yyyy&quot;: &quot;app_mm_yyyy&quot;,&#xd;
            &quot;connect_year&quot;: &quot;connect_year&quot;,&#xd;
            &quot;date_connect&quot;: &quot;date_connect&quot;,&#xd;
            &quot;flag_connect&quot;: &quot;flag_connect&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;reas_for_rej&quot;: &quot;reas_for_rej&quot;,&#xd;
            &quot;connect_month&quot;: &quot;connect_month&quot;,&#xd;
            &quot;deadline_year&quot;: &quot;deadline_year&quot;,&#xd;
            &quot;flag_deadline&quot;: &quot;flag_deadline&quot;,&#xd;
            &quot;deadline_month&quot;: &quot;deadline_month&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;connect_mm_yyyy&quot;: &quot;connect_mm_yyyy&quot;,&#xd;
            &quot;application_year&quot;: &quot;application_year&quot;,&#xd;
            &quot;deadline_mm_yyyy&quot;: &quot;deadline_mm_yyyy&quot;,&#xd;
            &quot;flag_application&quot;: &quot;flag_application&quot;,&#xd;
            &quot;application_month&quot;: &quot;application_month&quot;,&#xd;
            &quot;deadline_contract&quot;: &quot;deadline_contract&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;connect_month_year&quot;: &quot;connect_month_year&quot;,&#xd;
            &quot;deadline_month_year&quot;: &quot;deadline_month_year&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;количество&quot;: {&#xd;
                    &quot;$count&quot;: &quot;application_number&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;Статус&quot;: &quot;status&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_68" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;source&quot;: &quot;source&quot;,&#xd;
            &quot;status&quot;: &quot;status&quot;,&#xd;
            &quot;executor&quot;: &quot;executor&quot;,&#xd;
            &quot;locality&quot;: &quot;locality&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;state_name&quot;: &quot;state_name&quot;,&#xd;
            &quot;app_mm_yyyy&quot;: &quot;app_mm_yyyy&quot;,&#xd;
            &quot;connect_year&quot;: &quot;connect_year&quot;,&#xd;
            &quot;date_connect&quot;: &quot;date_connect&quot;,&#xd;
            &quot;flag_connect&quot;: &quot;flag_connect&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;reas_for_rej&quot;: &quot;reas_for_rej&quot;,&#xd;
            &quot;connect_month&quot;: &quot;connect_month&quot;,&#xd;
            &quot;deadline_year&quot;: &quot;deadline_year&quot;,&#xd;
            &quot;flag_deadline&quot;: &quot;flag_deadline&quot;,&#xd;
            &quot;conn_gas_distr&quot;: &quot;conn_gas_distr&quot;,&#xd;
            &quot;deadline_month&quot;: &quot;deadline_month&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;connect_mm_yyyy&quot;: &quot;connect_mm_yyyy&quot;,&#xd;
            &quot;application_year&quot;: &quot;application_year&quot;,&#xd;
            &quot;deadline_mm_yyyy&quot;: &quot;deadline_mm_yyyy&quot;,&#xd;
            &quot;flag_application&quot;: &quot;flag_application&quot;,&#xd;
            &quot;internal_app_num&quot;: &quot;internal_app_num&quot;,&#xd;
            &quot;update_timestamp&quot;: &quot;update_timestamp&quot;,&#xd;
            &quot;application_month&quot;: &quot;application_month&quot;,&#xd;
            &quot;deadline_contract&quot;: &quot;deadline_contract&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;connect_month_year&quot;: &quot;connect_month_year&quot;,&#xd;
            &quot;status_of_contract&quot;: &quot;status_of_contract&quot;,&#xd;
            &quot;construction_status&quot;: &quot;construction_status&quot;,&#xd;
            &quot;deadline_month_year&quot;: &quot;deadline_month_year&quot;,&#xd;
            &quot;status_of_the_contract&quot;: &quot;status_of_the_contract&quot;,&#xd;
            &quot;status_within_the_site&quot;: &quot;status_within_the_site&quot;,&#xd;
            &quot;preferential_category_of_citizens&quot;: &quot;preferential_category_of_citizens&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;status&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;Отклонено&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;Заявки&quot;: {&#xd;
                    &quot;$count&quot;: &quot;application_number&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;Доп.статус&quot;: &quot;general_status&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_69" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_dogazification&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;Заявки&quot;: &quot;desc&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;source&quot;: &quot;source&quot;,&#xd;
            &quot;status&quot;: &quot;status&quot;,&#xd;
            &quot;executor&quot;: &quot;executor&quot;,&#xd;
            &quot;locality&quot;: &quot;locality&quot;,&#xd;
            &quot;state_code&quot;: &quot;state_code&quot;,&#xd;
            &quot;state_name&quot;: &quot;state_name&quot;,&#xd;
            &quot;app_mm_yyyy&quot;: &quot;app_mm_yyyy&quot;,&#xd;
            &quot;connect_year&quot;: &quot;connect_year&quot;,&#xd;
            &quot;date_connect&quot;: &quot;date_connect&quot;,&#xd;
            &quot;flag_connect&quot;: &quot;flag_connect&quot;,&#xd;
            &quot;municipality&quot;: &quot;municipality&quot;,&#xd;
            &quot;reas_for_rej&quot;: &quot;reas_for_rej&quot;,&#xd;
            &quot;connect_month&quot;: &quot;connect_month&quot;,&#xd;
            &quot;deadline_year&quot;: &quot;deadline_year&quot;,&#xd;
            &quot;flag_deadline&quot;: &quot;flag_deadline&quot;,&#xd;
            &quot;conn_gas_distr&quot;: &quot;conn_gas_distr&quot;,&#xd;
            &quot;deadline_month&quot;: &quot;deadline_month&quot;,&#xd;
            &quot;general_status&quot;: &quot;general_status&quot;,&#xd;
            &quot;connect_mm_yyyy&quot;: &quot;connect_mm_yyyy&quot;,&#xd;
            &quot;application_year&quot;: &quot;application_year&quot;,&#xd;
            &quot;deadline_mm_yyyy&quot;: &quot;deadline_mm_yyyy&quot;,&#xd;
            &quot;flag_application&quot;: &quot;flag_application&quot;,&#xd;
            &quot;internal_app_num&quot;: &quot;internal_app_num&quot;,&#xd;
            &quot;update_timestamp&quot;: &quot;update_timestamp&quot;,&#xd;
            &quot;application_month&quot;: &quot;application_month&quot;,&#xd;
            &quot;deadline_contract&quot;: &quot;deadline_contract&quot;,&#xd;
            &quot;application_number&quot;: &quot;application_number&quot;,&#xd;
            &quot;connect_month_year&quot;: &quot;connect_month_year&quot;,&#xd;
            &quot;status_of_contract&quot;: &quot;status_of_contract&quot;,&#xd;
            &quot;construction_status&quot;: &quot;construction_status&quot;,&#xd;
            &quot;deadline_month_year&quot;: &quot;deadline_month_year&quot;,&#xd;
            &quot;status_of_the_contract&quot;: &quot;status_of_the_contract&quot;,&#xd;
            &quot;status_within_the_site&quot;: &quot;status_within_the_site&quot;,&#xd;
            &quot;preferential_category_of_citizens&quot;: &quot;preferential_category_of_citizens&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;status&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;Принято&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;Заявки&quot;: {&#xd;
                    &quot;$count&quot;: &quot;application_number&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;Доп.статус&quot;: &quot;general_status&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_70" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;6_request_execution&quot;,&#xd;
            &quot;dal_data_solution_request_execution_gallery&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;name&quot;: &quot;name&quot;,&#xd;
            &quot;slot&quot;: &quot;slot&quot;,&#xd;
            &quot;sort&quot;: &quot;sort&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;name&quot;: {&#xd;
                    &quot;$eq&quot;: [&#xd;
                        &quot;Дефолт&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;название&quot;: {&#xd;
                    &quot;$v&quot;: &quot;name&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;слот&quot;: {&#xd;
                    &quot;$v&quot;: &quot;slot&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;id&quot;: {&#xd;
                    &quot;$v&quot;: &quot;sort&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="US_5_Команды" enabled="true"/>
      <hashTree>
        <com.blazemeter.jmeter.controller.ParallelSampler guiclass="com.blazemeter.jmeter.controller.ParallelControllerGui" testclass="com.blazemeter.jmeter.controller.ParallelSampler" testname="TC_5.1_Команды" enabled="true">
          <intProp name="MAX_THREAD_NUMBER">6</intProp>
          <boolProp name="PARENT_SAMPLE">true</boolProp>
          <boolProp name="LIMIT_MAX_THREAD_NUMBER">false</boolProp>
        </com.blazemeter.jmeter.controller.ParallelSampler>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_71" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;1_project_team_management&quot;,&#xd;
            &quot;dal_data_solution_project_team_management_main&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [&#xd;
            {&#xd;
                &quot;val&quot;: &quot;desc&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;employee_id&quot;: &quot;employee_id&quot;,&#xd;
            &quot;project_name&quot;: &quot;project_name&quot;,&#xd;
            &quot;project_field&quot;: &quot;project_field&quot;,&#xd;
            &quot;employee_photo&quot;: &quot;employee_photo&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [&#xd;
            {&#xd;
                &quot;dim&quot;: {&#xd;
                    &quot;$eqn&quot;: [&#xd;
                        &quot;&quot;&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;val&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;ndv(project_name)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;сотрудники&quot;: {&#xd;
                    &quot;$gcu&quot;: &quot;employee_photo&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;кол-во сотрудников&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;ndv(employee_id)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;фото зама&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;&apos;https://digital.gov.ru/preview/c/b19cc7b2b57324a1e84b76c6851f2f98/256/x/256/uploaded/photos/cherkesova-bella-muharbievna.jpg&apos;&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;процент&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;ndv(case when there_is_competence=1 then employee_id end)\n/\nndv(employee_id)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;dim&quot;: &quot;project_field&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_72" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;1_project_team_management&quot;,&#xd;
            &quot;dal_data_solution_project_team_management_main&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;employee_id&quot;: &quot;employee_id&quot;,&#xd;
            &quot;there_is_competence&quot;: &quot;there_is_competence&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;val&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;ndv(case when there_is_competence=1 then employee_id end)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;icon&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;min(&apos;mdi-badge-account-horizontal-outline&apos;)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;val1&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;ndv(employee_id)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_73" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;1_project_team_management&quot;,&#xd;
            &quot;dal_data_solution_project_team_management_main&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;percent_competence&quot;: &quot;percent_competence&quot;,&#xd;
            &quot;project_participation_percent&quot;: &quot;project_participation_percent&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;val&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;avg(case when percent_competence !=0 then percent_competence end)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;icon&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;min(&apos;mdi-bookmark-box-multiple-outline&apos;)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_74" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;1_project_team_management&quot;,&#xd;
            &quot;dal_data_solution_project_team_management_main&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;employee_id&quot;: &quot;employee_id&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;val&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;ndv(employee_id)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;icon&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;min(&apos;mdi-account-multiple-outline&apos;)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_75" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;1_project_team_management&quot;,&#xd;
            &quot;dal_data_solution_project_team_management_main&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;project_name&quot;: &quot;project_name&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [&#xd;
            {&#xd;
                &quot;val&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;ndv(project_name)&quot;&#xd;
                }&#xd;
            },&#xd;
            {&#xd;
                &quot;icon&quot;: {&#xd;
                    &quot;$exp&quot;: &quot;min(&apos;mdi-briefcase-outline&apos;)&quot;&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;$dimensions&quot;: []&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="&gt;_connector/api/v1/data_76" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;query&quot;: {&#xd;
        &quot;$from&quot;: [&#xd;
            &quot;solutions&quot;,&#xd;
            &quot;1_project_team_management&quot;,&#xd;
            &quot;dal_data_solution_project_team_management_main&quot;&#xd;
        ],&#xd;
        &quot;$sort&quot;: [],&#xd;
        &quot;$fields&quot;: {&#xd;
            &quot;status_id&quot;: &quot;status_id&quot;&#xd;
        },&#xd;
        &quot;$filters&quot;: [],&#xd;
        &quot;$metrics&quot;: [],&#xd;
        &quot;$dimensions&quot;: [&#xd;
            {&#xd;
                &quot;dim&quot;: &quot;status_id&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;limit&quot;: 0,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;connection&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">partner.goodt.me</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">connector/api/v1/data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${TOKEN}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value"> gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-RU;q=0.8,en-US;q=0.7,en;q=0.6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="___ЛИСЕНЕРЫ___" enabled="false"/>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>true</latency>
            <timestamp>false</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>true</latency>
            <timestamp>false</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
